// <auto-generated />
using System;
using Junko.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Junko.Migrations
{
    [DbContext(typeof(JunkoDBContext))]
    [Migration("20191225114225_WhatDoTableAdded")]
    partial class WhatDoTableAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Junko.ModelTranslate.AboutSettingTranslate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AboutSettingId")
                        .HasColumnType("int");

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(600)")
                        .HasMaxLength(600);

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.HasIndex("AboutSettingId");

                    b.HasIndex("LanguageId");

                    b.ToTable("AboutSettingTranslates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AboutSettingId = 1,
                            Desc = "Adipiscing lacus ut elementum, nec duis, tempor litora turpis dapibus. Imperdiet cursus odio tortor in elementum. Egestas nunc eleifend feugiat lectus laoreet, vel nunc taciti integer cras. Hac pede dis, praesent nibh ac dui mauris sit. Pellentesque mi, facilisi mauris, elit sociis leo sodales accumsan. Iaculis ac fringilla torquent lorem consectetuer, sociosqu phasellus risus urna aliquam, ornare.",
                            LanguageId = 1,
                            Title = "ECommerce For Electronics Store"
                        },
                        new
                        {
                            Id = 2,
                            AboutSettingId = 1,
                            Desc = "Beyjə murtta səni yağlaşoy səni göyüz xışdıyaram, qağa ciji qayır öy a qıvlasız mamoğlu dığlatdın, eşiy anarıdan-bəri səni öy qayır. Çırtımına yiyə dursan? ayna durinan suruxvat ayna durinan dayna sülöymən kiri a qıvlasız səni, ciji siyəndər qalet murtta dığlatdın dınqı anarıdan-bəri, qavağında ölöm döyğa tutaşmıyın mamoğlu a bimürvət ayna durinan mığı.",
                            LanguageId = 2,
                            Title = "Elektronika Mağazası üçün Kommersiya fəaliyyəti"
                        });
                });

            modelBuilder.Entity("Junko.ModelTranslate.AdminCategoryTranslate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdminCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("AdminCategoryId");

                    b.HasIndex("LanguageId");

                    b.ToTable("AdminCategoryTranslates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdminCategoryId = 1,
                            LanguageId = 1,
                            Name = "Director"
                        },
                        new
                        {
                            Id = 2,
                            AdminCategoryId = 1,
                            LanguageId = 2,
                            Name = "Direktor"
                        });
                });

            modelBuilder.Entity("Junko.ModelTranslate.BlogCategoryTranslate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("LanguageId");

                    b.ToTable("BlogCategoryTranslates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            LanguageId = 1,
                            Name = "Audio"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            LanguageId = 2,
                            Name = "Audio"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            LanguageId = 1,
                            Name = "Company"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            LanguageId = 2,
                            Name = "Şirkət"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 3,
                            LanguageId = 1,
                            Name = "Gallery"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 3,
                            LanguageId = 2,
                            Name = "Qalareya"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 4,
                            LanguageId = 1,
                            Name = "Travel"
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 4,
                            LanguageId = 2,
                            Name = "Səyahət"
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 5,
                            LanguageId = 1,
                            Name = "Other"
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 5,
                            LanguageId = 2,
                            Name = "Digər"
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 6,
                            LanguageId = 1,
                            Name = "Video"
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 6,
                            LanguageId = 2,
                            Name = "Video"
                        });
                });

            modelBuilder.Entity("Junko.ModelTranslate.BlogTranslate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BlogId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(700)")
                        .HasMaxLength(700);

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("BlogId");

                    b.HasIndex("LanguageId");

                    b.ToTable("BlogTranslates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BlogId = 1,
                            Content = "<p>Aenean et tempor eros,vitae sollicitudin velit.Etiam varius enim nec quam tempor sed efficitur ex ultrices.Phasellus pretium est vel vestibulum condimentum.Aenean nec suscipit nibh.Phasellus nec lacus arcu facilisis elementum.Curabitur lobortiselit ut elementum congueerat ex bibendum odionec iaculis lacus sem non lorem.Duis metus antesed convallis quam posuere quis.Ut tincidunt eleifend odioac fringilla mi vehicula nec.Nunc vitae lacus eget lectus tempus sed in dui.Nam molestie magna at risus suscipit justo dignissim.Sed vitae fringilla enimnec arcu</p><blockquote><p>Quisque semper nunc vitae erat pellentesqueac placerat consectetur.In venenatis elit ac ultrices convallis.Duis est nisitincidunt ac urna sedcursus blandit lectus.In ullamcorper amet ligula ut eleifend.Proin dictum tempor ligulaac metus.Sed finibus tortor eu scelerisque scelerisque</p></blockquote><p>Aenean et tempor erosvitae sollicitudin velit.Etiam varius enim quam temporsed efficitur ex ultrices.Phasellus pretium est vel vestibulum condimentum.Aenean nec suscipit nibh.Phasellus nec lacus arcu facilisis elementum.Curabitur lobortiselit ut elementum congueerat ex bibendum odionec iaculis lacus sem non lorem.Duis metus antesed convallis quam posuere quis.Ut tincidunt eleifend odioac fringilla mi vehicula nec.Nunc vitae lacus eget lectus tempus sed in dui.Nam molestie magna at risus suscipit justo dignissim.Sed vitae fringilla enimnec arcu</p><p>Suspendisse turpis ipsumtempus in nulla euposuere pharetra nibh.dignissim vitae lorem non mollis.Praesent pretium tellus in viverra condimentum.Nullam dignissim facilisis nislaccumsan justo ultricies vel.Vivamus finibus mi a neque pretiumut dui lacinia.Morbi a rutrum velit.Curabitur sagittis quam consectetur mattis.Aenean sit amet quam vel turpis interdum sagittis eget neque.Nunc ante quamluctus et neque ainterdum iaculis metusAliquam vel ante mattisplacerat orci idvehicula quam.quis eros cursusviverra urna sedcommodo mauris.Cras diam arcufringilla a sem condimentumviverra facilisis nunc.Curabitur orci id nulla maximus maximus.Nunc pulvinar sollicitudin molestie</p></div> ",
                            Desc = "Donec vitae hendrerit arcu, sit amet faucibus nisl. Cras pretium arcu ex. Aenean posuere libero eu augue condimentum rhoncus. Praesent ornare tortor ac ante egestas hendrerit. Aliquam et metus pharetra, bibendum massa nec, fermentum odio.",
                            LanguageId = 1,
                            Slug = "Blog-Image-Post",
                            Title = "Blog Image Post (Sticky)"
                        },
                        new
                        {
                            Id = 2,
                            BlogId = 2,
                            Content = "<p>Aenean et tempor eros,vitae sollicitudin velit.Etiam varius enim nec quam tempor sed efficitur ex ultrices.Phasellus pretium est vel vestibulum condimentum.Aenean nec suscipit nibh.Phasellus nec lacus arcu facilisis elementum.Curabitur lobortiselit ut elementum congueerat ex bibendum odionec iaculis lacus sem non lorem.Duis metus antesed convallis quam posuere quis.Ut tincidunt eleifend odioac fringilla mi vehicula nec.Nunc vitae lacus eget lectus tempus sed in dui.Nam molestie magna at risus suscipit justo dignissim.Sed vitae fringilla enimnec arcu</p><blockquote><p>Quisque semper nunc vitae erat pellentesqueac placerat consectetur.In venenatis elit ac ultrices convallis.Duis est nisitincidunt ac urna sedcursus blandit lectus.In ullamcorper amet ligula ut eleifend.Proin dictum tempor ligulaac metus.Sed finibus tortor eu scelerisque scelerisque</p></blockquote><p>Aenean et tempor erosvitae sollicitudin velit.Etiam varius enim quam temporsed efficitur ex ultrices.Phasellus pretium est vel vestibulum condimentum.Aenean nec suscipit nibh.Phasellus nec lacus arcu facilisis elementum.Curabitur lobortiselit ut elementum congueerat ex bibendum odionec iaculis lacus sem non lorem.Duis metus antesed convallis quam posuere quis.Ut tincidunt eleifend odioac fringilla mi vehicula nec.Nunc vitae lacus eget lectus tempus sed in dui.Nam molestie magna at risus suscipit justo dignissim.Sed vitae fringilla enimnec arcu</p><p>Suspendisse turpis ipsumtempus in nulla euposuere pharetra nibh.dignissim vitae lorem non mollis.Praesent pretium tellus in viverra condimentum.Nullam dignissim facilisis nislaccumsan justo ultricies vel.Vivamus finibus mi a neque pretiumut dui lacinia.Morbi a rutrum velit.Curabitur sagittis quam consectetur mattis.Aenean sit amet quam vel turpis interdum sagittis eget neque.Nunc ante quamluctus et neque ainterdum iaculis metusAliquam vel ante mattisplacerat orci idvehicula quam.quis eros cursusviverra urna sedcommodo mauris.Cras diam arcufringilla a sem condimentumviverra facilisis nunc.Curabitur orci id nulla maximus maximus.Nunc pulvinar sollicitudin molestie</p></div> ",
                            Desc = "Donec vitae hendrerit arcu, sit amet faucibus nisl. Cras pretium arcu ex. Aenean posuere libero eu augue condimentum rhoncus. Praesent ornare tortor ac ante egestas hendrerit. Aliquam et metus pharetra, bibendum massa nec, fermentum odio.",
                            LanguageId = 1,
                            Slug = "Post-With-Gallery",
                            Title = "Post With Gallery"
                        },
                        new
                        {
                            Id = 3,
                            BlogId = 3,
                            Content = "<p>Aenean et tempor eros,vitae sollicitudin velit.Etiam varius enim nec quam tempor sed efficitur ex ultrices.Phasellus pretium est vel vestibulum condimentum.Aenean nec suscipit nibh.Phasellus nec lacus arcu facilisis elementum.Curabitur lobortiselit ut elementum congueerat ex bibendum odionec iaculis lacus sem non lorem.Duis metus antesed convallis quam posuere quis.Ut tincidunt eleifend odioac fringilla mi vehicula nec.Nunc vitae lacus eget lectus tempus sed in dui.Nam molestie magna at risus suscipit justo dignissim.Sed vitae fringilla enimnec arcu</p><blockquote><p>Quisque semper nunc vitae erat pellentesqueac placerat consectetur.In venenatis elit ac ultrices convallis.Duis est nisitincidunt ac urna sedcursus blandit lectus.In ullamcorper amet ligula ut eleifend.Proin dictum tempor ligulaac metus.Sed finibus tortor eu scelerisque scelerisque</p></blockquote><p>Aenean et tempor erosvitae sollicitudin velit.Etiam varius enim quam temporsed efficitur ex ultrices.Phasellus pretium est vel vestibulum condimentum.Aenean nec suscipit nibh.Phasellus nec lacus arcu facilisis elementum.Curabitur lobortiselit ut elementum congueerat ex bibendum odionec iaculis lacus sem non lorem.Duis metus antesed convallis quam posuere quis.Ut tincidunt eleifend odioac fringilla mi vehicula nec.Nunc vitae lacus eget lectus tempus sed in dui.Nam molestie magna at risus suscipit justo dignissim.Sed vitae fringilla enimnec arcu</p><p>Suspendisse turpis ipsumtempus in nulla euposuere pharetra nibh.dignissim vitae lorem non mollis.Praesent pretium tellus in viverra condimentum.Nullam dignissim facilisis nislaccumsan justo ultricies vel.Vivamus finibus mi a neque pretiumut dui lacinia.Morbi a rutrum velit.Curabitur sagittis quam consectetur mattis.Aenean sit amet quam vel turpis interdum sagittis eget neque.Nunc ante quamluctus et neque ainterdum iaculis metusAliquam vel ante mattisplacerat orci idvehicula quam.quis eros cursusviverra urna sedcommodo mauris.Cras diam arcufringilla a sem condimentumviverra facilisis nunc.Curabitur orci id nulla maximus maximus.Nunc pulvinar sollicitudin molestie</p></div> ",
                            Desc = "Donec vitae hendrerit arcu, sit amet faucibus nisl. Cras pretium arcu ex. Aenean posuere libero eu augue condimentum rhoncus. Praesent ornare tortor ac ante egestas hendrerit. Aliquam et metus pharetra, bibendum massa nec, fermentum odio.",
                            LanguageId = 1,
                            Slug = "Maecenas-Ultricies",
                            Title = "Maecenas Ultricies"
                        },
                        new
                        {
                            Id = 4,
                            BlogId = 4,
                            Content = "<p>Aenean et tempor eros,vitae sollicitudin velit.Etiam varius enim nec quam tempor sed efficitur ex ultrices.Phasellus pretium est vel vestibulum condimentum.Aenean nec suscipit nibh.Phasellus nec lacus arcu facilisis elementum.Curabitur lobortiselit ut elementum congueerat ex bibendum odionec iaculis lacus sem non lorem.Duis metus antesed convallis quam posuere quis.Ut tincidunt eleifend odioac fringilla mi vehicula nec.Nunc vitae lacus eget lectus tempus sed in dui.Nam molestie magna at risus suscipit justo dignissim.Sed vitae fringilla enimnec arcu</p><blockquote><p>Quisque semper nunc vitae erat pellentesqueac placerat consectetur.In venenatis elit ac ultrices convallis.Duis est nisitincidunt ac urna sedcursus blandit lectus.In ullamcorper amet ligula ut eleifend.Proin dictum tempor ligulaac metus.Sed finibus tortor eu scelerisque scelerisque</p></blockquote><p>Aenean et tempor erosvitae sollicitudin velit.Etiam varius enim quam temporsed efficitur ex ultrices.Phasellus pretium est vel vestibulum condimentum.Aenean nec suscipit nibh.Phasellus nec lacus arcu facilisis elementum.Curabitur lobortiselit ut elementum congueerat ex bibendum odionec iaculis lacus sem non lorem.Duis metus antesed convallis quam posuere quis.Ut tincidunt eleifend odioac fringilla mi vehicula nec.Nunc vitae lacus eget lectus tempus sed in dui.Nam molestie magna at risus suscipit justo dignissim.Sed vitae fringilla enimnec arcu</p><p>Suspendisse turpis ipsumtempus in nulla euposuere pharetra nibh.dignissim vitae lorem non mollis.Praesent pretium tellus in viverra condimentum.Nullam dignissim facilisis nislaccumsan justo ultricies vel.Vivamus finibus mi a neque pretiumut dui lacinia.Morbi a rutrum velit.Curabitur sagittis quam consectetur mattis.Aenean sit amet quam vel turpis interdum sagittis eget neque.Nunc ante quamluctus et neque ainterdum iaculis metusAliquam vel ante mattisplacerat orci idvehicula quam.quis eros cursusviverra urna sedcommodo mauris.Cras diam arcufringilla a sem condimentumviverra facilisis nunc.Curabitur orci id nulla maximus maximus.Nunc pulvinar sollicitudin molestie</p></div> ",
                            Desc = "Donec vitae hendrerit arcu, sit amet faucibus nisl. Cras pretium arcu ex. Aenean posuere libero eu augue condimentum rhoncus. Praesent ornare tortor ac ante egestas hendrerit. Aliquam et metus pharetra, bibendum massa nec, fermentum odio.",
                            LanguageId = 1,
                            Slug = "Post-with-audio",
                            Title = "Post With Audio"
                        },
                        new
                        {
                            Id = 5,
                            BlogId = 5,
                            Content = "<p>Aenean et tempor eros,vitae sollicitudin velit.Etiam varius enim nec quam tempor sed efficitur ex ultrices.Phasellus pretium est vel vestibulum condimentum.Aenean nec suscipit nibh.Phasellus nec lacus arcu facilisis elementum.Curabitur lobortiselit ut elementum congueerat ex bibendum odionec iaculis lacus sem non lorem.Duis metus antesed convallis quam posuere quis.Ut tincidunt eleifend odioac fringilla mi vehicula nec.Nunc vitae lacus eget lectus tempus sed in dui.Nam molestie magna at risus suscipit justo dignissim.Sed vitae fringilla enimnec arcu</p><blockquote><p>Quisque semper nunc vitae erat pellentesqueac placerat consectetur.In venenatis elit ac ultrices convallis.Duis est nisitincidunt ac urna sedcursus blandit lectus.In ullamcorper amet ligula ut eleifend.Proin dictum tempor ligulaac metus.Sed finibus tortor eu scelerisque scelerisque</p></blockquote><p>Aenean et tempor erosvitae sollicitudin velit.Etiam varius enim quam temporsed efficitur ex ultrices.Phasellus pretium est vel vestibulum condimentum.Aenean nec suscipit nibh.Phasellus nec lacus arcu facilisis elementum.Curabitur lobortiselit ut elementum congueerat ex bibendum odionec iaculis lacus sem non lorem.Duis metus antesed convallis quam posuere quis.Ut tincidunt eleifend odioac fringilla mi vehicula nec.Nunc vitae lacus eget lectus tempus sed in dui.Nam molestie magna at risus suscipit justo dignissim.Sed vitae fringilla enimnec arcu</p><p>Suspendisse turpis ipsumtempus in nulla euposuere pharetra nibh.dignissim vitae lorem non mollis.Praesent pretium tellus in viverra condimentum.Nullam dignissim facilisis nislaccumsan justo ultricies vel.Vivamus finibus mi a neque pretiumut dui lacinia.Morbi a rutrum velit.Curabitur sagittis quam consectetur mattis.Aenean sit amet quam vel turpis interdum sagittis eget neque.Nunc ante quamluctus et neque ainterdum iaculis metusAliquam vel ante mattisplacerat orci idvehicula quam.quis eros cursusviverra urna sedcommodo mauris.Cras diam arcufringilla a sem condimentumviverra facilisis nunc.Curabitur orci id nulla maximus maximus.Nunc pulvinar sollicitudin molestie</p></div> ",
                            Desc = "Donec vitae hendrerit arcu, sit amet faucibus nisl. Cras pretium arcu ex. Aenean posuere libero eu augue condimentum rhoncus. Praesent ornare tortor ac ante egestas hendrerit. Aliquam et metus pharetra, bibendum massa nec, fermentum odio.",
                            LanguageId = 1,
                            Slug = "preasent-imperdiet",
                            Title = "Praesent Imperdiet"
                        },
                        new
                        {
                            Id = 6,
                            BlogId = 6,
                            Content = "<p>Aenean et tempor eros,vitae sollicitudin velit.Etiam varius enim nec quam tempor sed efficitur ex ultrices.Phasellus pretium est vel vestibulum condimentum.Aenean nec suscipit nibh.Phasellus nec lacus arcu facilisis elementum.Curabitur lobortiselit ut elementum congueerat ex bibendum odionec iaculis lacus sem non lorem.Duis metus antesed convallis quam posuere quis.Ut tincidunt eleifend odioac fringilla mi vehicula nec.Nunc vitae lacus eget lectus tempus sed in dui.Nam molestie magna at risus suscipit justo dignissim.Sed vitae fringilla enimnec arcu</p><blockquote><p>Quisque semper nunc vitae erat pellentesqueac placerat consectetur.In venenatis elit ac ultrices convallis.Duis est nisitincidunt ac urna sedcursus blandit lectus.In ullamcorper amet ligula ut eleifend.Proin dictum tempor ligulaac metus.Sed finibus tortor eu scelerisque scelerisque</p></blockquote><p>Aenean et tempor erosvitae sollicitudin velit.Etiam varius enim quam temporsed efficitur ex ultrices.Phasellus pretium est vel vestibulum condimentum.Aenean nec suscipit nibh.Phasellus nec lacus arcu facilisis elementum.Curabitur lobortiselit ut elementum congueerat ex bibendum odionec iaculis lacus sem non lorem.Duis metus antesed convallis quam posuere quis.Ut tincidunt eleifend odioac fringilla mi vehicula nec.Nunc vitae lacus eget lectus tempus sed in dui.Nam molestie magna at risus suscipit justo dignissim.Sed vitae fringilla enimnec arcu</p><p>Suspendisse turpis ipsumtempus in nulla euposuere pharetra nibh.dignissim vitae lorem non mollis.Praesent pretium tellus in viverra condimentum.Nullam dignissim facilisis nislaccumsan justo ultricies vel.Vivamus finibus mi a neque pretiumut dui lacinia.Morbi a rutrum velit.Curabitur sagittis quam consectetur mattis.Aenean sit amet quam vel turpis interdum sagittis eget neque.Nunc ante quamluctus et neque ainterdum iaculis metusAliquam vel ante mattisplacerat orci idvehicula quam.quis eros cursusviverra urna sedcommodo mauris.Cras diam arcufringilla a sem condimentumviverra facilisis nunc.Curabitur orci id nulla maximus maximus.Nunc pulvinar sollicitudin molestie</p></div> ",
                            Desc = "Donec vitae hendrerit arcu, sit amet faucibus nisl. Cras pretium arcu ex. Aenean posuere libero eu augue condimentum rhoncus. Praesent ornare tortor ac ante egestas hendrerit. Aliquam et metus pharetra, bibendum massa nec, fermentum odio.",
                            LanguageId = 1,
                            Slug = "gallery-post",
                            Title = "Gallery Post"
                        },
                        new
                        {
                            Id = 7,
                            BlogId = 7,
                            Content = "<p>Aenean et tempor eros,vitae sollicitudin velit.Etiam varius enim nec quam tempor sed efficitur ex ultrices.Phasellus pretium est vel vestibulum condimentum.Aenean nec suscipit nibh.Phasellus nec lacus arcu facilisis elementum.Curabitur lobortiselit ut elementum congueerat ex bibendum odionec iaculis lacus sem non lorem.Duis metus antesed convallis quam posuere quis.Ut tincidunt eleifend odioac fringilla mi vehicula nec.Nunc vitae lacus eget lectus tempus sed in dui.Nam molestie magna at risus suscipit justo dignissim.Sed vitae fringilla enimnec arcu</p><blockquote><p>Quisque semper nunc vitae erat pellentesqueac placerat consectetur.In venenatis elit ac ultrices convallis.Duis est nisitincidunt ac urna sedcursus blandit lectus.In ullamcorper amet ligula ut eleifend.Proin dictum tempor ligulaac metus.Sed finibus tortor eu scelerisque scelerisque</p></blockquote><p>Aenean et tempor erosvitae sollicitudin velit.Etiam varius enim quam temporsed efficitur ex ultrices.Phasellus pretium est vel vestibulum condimentum.Aenean nec suscipit nibh.Phasellus nec lacus arcu facilisis elementum.Curabitur lobortiselit ut elementum congueerat ex bibendum odionec iaculis lacus sem non lorem.Duis metus antesed convallis quam posuere quis.Ut tincidunt eleifend odioac fringilla mi vehicula nec.Nunc vitae lacus eget lectus tempus sed in dui.Nam molestie magna at risus suscipit justo dignissim.Sed vitae fringilla enimnec arcu</p><p>Suspendisse turpis ipsumtempus in nulla euposuere pharetra nibh.dignissim vitae lorem non mollis.Praesent pretium tellus in viverra condimentum.Nullam dignissim facilisis nislaccumsan justo ultricies vel.Vivamus finibus mi a neque pretiumut dui lacinia.Morbi a rutrum velit.Curabitur sagittis quam consectetur mattis.Aenean sit amet quam vel turpis interdum sagittis eget neque.Nunc ante quamluctus et neque ainterdum iaculis metusAliquam vel ante mattisplacerat orci idvehicula quam.quis eros cursusviverra urna sedcommodo mauris.Cras diam arcufringilla a sem condimentumviverra facilisis nunc.Curabitur orci id nulla maximus maximus.Nunc pulvinar sollicitudin molestie</p></div> ",
                            Desc = "Donec vitae hendrerit arcu, sit amet faucibus nisl. Cras pretium arcu ex. Aenean posuere libero eu augue condimentum rhoncus. Praesent ornare tortor ac ante egestas hendrerit. Aliquam et metus pharetra, bibendum massa nec, fermentum odio.",
                            LanguageId = 1,
                            Slug = "Ultricies-Maecenas",
                            Title = "Ultricies Maecenas"
                        },
                        new
                        {
                            Id = 8,
                            BlogId = 8,
                            Content = "<p>Aenean et tempor eros,vitae sollicitudin velit.Etiam varius enim nec quam tempor sed efficitur ex ultrices.Phasellus pretium est vel vestibulum condimentum.Aenean nec suscipit nibh.Phasellus nec lacus arcu facilisis elementum.Curabitur lobortiselit ut elementum congueerat ex bibendum odionec iaculis lacus sem non lorem.Duis metus antesed convallis quam posuere quis.Ut tincidunt eleifend odioac fringilla mi vehicula nec.Nunc vitae lacus eget lectus tempus sed in dui.Nam molestie magna at risus suscipit justo dignissim.Sed vitae fringilla enimnec arcu</p><blockquote><p>Quisque semper nunc vitae erat pellentesqueac placerat consectetur.In venenatis elit ac ultrices convallis.Duis est nisitincidunt ac urna sedcursus blandit lectus.In ullamcorper amet ligula ut eleifend.Proin dictum tempor ligulaac metus.Sed finibus tortor eu scelerisque scelerisque</p></blockquote><p>Aenean et tempor erosvitae sollicitudin velit.Etiam varius enim quam temporsed efficitur ex ultrices.Phasellus pretium est vel vestibulum condimentum.Aenean nec suscipit nibh.Phasellus nec lacus arcu facilisis elementum.Curabitur lobortiselit ut elementum congueerat ex bibendum odionec iaculis lacus sem non lorem.Duis metus antesed convallis quam posuere quis.Ut tincidunt eleifend odioac fringilla mi vehicula nec.Nunc vitae lacus eget lectus tempus sed in dui.Nam molestie magna at risus suscipit justo dignissim.Sed vitae fringilla enimnec arcu</p><p>Suspendisse turpis ipsumtempus in nulla euposuere pharetra nibh.dignissim vitae lorem non mollis.Praesent pretium tellus in viverra condimentum.Nullam dignissim facilisis nislaccumsan justo ultricies vel.Vivamus finibus mi a neque pretiumut dui lacinia.Morbi a rutrum velit.Curabitur sagittis quam consectetur mattis.Aenean sit amet quam vel turpis interdum sagittis eget neque.Nunc ante quamluctus et neque ainterdum iaculis metusAliquam vel ante mattisplacerat orci idvehicula quam.quis eros cursusviverra urna sedcommodo mauris.Cras diam arcufringilla a sem condimentumviverra facilisis nunc.Curabitur orci id nulla maximus maximus.Nunc pulvinar sollicitudin molestie</p></div> ",
                            Desc = "Donec vitae hendrerit arcu, sit amet faucibus nisl. Cras pretium arcu ex. Aenean posuere libero eu augue condimentum rhoncus. Praesent ornare tortor ac ante egestas hendrerit. Aliquam et metus pharetra, bibendum massa nec, fermentum odio.",
                            LanguageId = 1,
                            Slug = "Audio-Post",
                            Title = " Audio Post"
                        },
                        new
                        {
                            Id = 9,
                            BlogId = 9,
                            Content = "<p>Aenean et tempor eros,vitae sollicitudin velit.Etiam varius enim nec quam tempor sed efficitur ex ultrices.Phasellus pretium est vel vestibulum condimentum.Aenean nec suscipit nibh.Phasellus nec lacus arcu facilisis elementum.Curabitur lobortiselit ut elementum congueerat ex bibendum odionec iaculis lacus sem non lorem.Duis metus antesed convallis quam posuere quis.Ut tincidunt eleifend odioac fringilla mi vehicula nec.Nunc vitae lacus eget lectus tempus sed in dui.Nam molestie magna at risus suscipit justo dignissim.Sed vitae fringilla enimnec arcu</p><blockquote><p>Quisque semper nunc vitae erat pellentesqueac placerat consectetur.In venenatis elit ac ultrices convallis.Duis est nisitincidunt ac urna sedcursus blandit lectus.In ullamcorper amet ligula ut eleifend.Proin dictum tempor ligulaac metus.Sed finibus tortor eu scelerisque scelerisque</p></blockquote><p>Aenean et tempor erosvitae sollicitudin velit.Etiam varius enim quam temporsed efficitur ex ultrices.Phasellus pretium est vel vestibulum condimentum.Aenean nec suscipit nibh.Phasellus nec lacus arcu facilisis elementum.Curabitur lobortiselit ut elementum congueerat ex bibendum odionec iaculis lacus sem non lorem.Duis metus antesed convallis quam posuere quis.Ut tincidunt eleifend odioac fringilla mi vehicula nec.Nunc vitae lacus eget lectus tempus sed in dui.Nam molestie magna at risus suscipit justo dignissim.Sed vitae fringilla enimnec arcu</p><p>Suspendisse turpis ipsumtempus in nulla euposuere pharetra nibh.dignissim vitae lorem non mollis.Praesent pretium tellus in viverra condimentum.Nullam dignissim facilisis nislaccumsan justo ultricies vel.Vivamus finibus mi a neque pretiumut dui lacinia.Morbi a rutrum velit.Curabitur sagittis quam consectetur mattis.Aenean sit amet quam vel turpis interdum sagittis eget neque.Nunc ante quamluctus et neque ainterdum iaculis metusAliquam vel ante mattisplacerat orci idvehicula quam.quis eros cursusviverra urna sedcommodo mauris.Cras diam arcufringilla a sem condimentumviverra facilisis nunc.Curabitur orci id nulla maximus maximus.Nunc pulvinar sollicitudin molestie</p></div> ",
                            Desc = "Donec vitae hendrerit arcu, sit amet faucibus nisl. Cras pretium arcu ex. Aenean posuere libero eu augue condimentum rhoncus. Praesent ornare tortor ac ante egestas hendrerit. Aliquam et metus pharetra, bibendum massa nec, fermentum odio.",
                            LanguageId = 1,
                            Slug = "Image-Post",
                            Title = "Image Post"
                        },
                        new
                        {
                            Id = 10,
                            BlogId = 10,
                            Content = "<p>Aenean et tempor eros,vitae sollicitudin velit.Etiam varius enim nec quam tempor sed efficitur ex ultrices.Phasellus pretium est vel vestibulum condimentum.Aenean nec suscipit nibh.Phasellus nec lacus arcu facilisis elementum.Curabitur lobortiselit ut elementum congueerat ex bibendum odionec iaculis lacus sem non lorem.Duis metus antesed convallis quam posuere quis.Ut tincidunt eleifend odioac fringilla mi vehicula nec.Nunc vitae lacus eget lectus tempus sed in dui.Nam molestie magna at risus suscipit justo dignissim.Sed vitae fringilla enimnec arcu</p><blockquote><p>Quisque semper nunc vitae erat pellentesqueac placerat consectetur.In venenatis elit ac ultrices convallis.Duis est nisitincidunt ac urna sedcursus blandit lectus.In ullamcorper amet ligula ut eleifend.Proin dictum tempor ligulaac metus.Sed finibus tortor eu scelerisque scelerisque</p></blockquote><p>Aenean et tempor erosvitae sollicitudin velit.Etiam varius enim quam temporsed efficitur ex ultrices.Phasellus pretium est vel vestibulum condimentum.Aenean nec suscipit nibh.Phasellus nec lacus arcu facilisis elementum.Curabitur lobortiselit ut elementum congueerat ex bibendum odionec iaculis lacus sem non lorem.Duis metus antesed convallis quam posuere quis.Ut tincidunt eleifend odioac fringilla mi vehicula nec.Nunc vitae lacus eget lectus tempus sed in dui.Nam molestie magna at risus suscipit justo dignissim.Sed vitae fringilla enimnec arcu</p><p>Suspendisse turpis ipsumtempus in nulla euposuere pharetra nibh.dignissim vitae lorem non mollis.Praesent pretium tellus in viverra condimentum.Nullam dignissim facilisis nislaccumsan justo ultricies vel.Vivamus finibus mi a neque pretiumut dui lacinia.Morbi a rutrum velit.Curabitur sagittis quam consectetur mattis.Aenean sit amet quam vel turpis interdum sagittis eget neque.Nunc ante quamluctus et neque ainterdum iaculis metusAliquam vel ante mattisplacerat orci idvehicula quam.quis eros cursusviverra urna sedcommodo mauris.Cras diam arcufringilla a sem condimentumviverra facilisis nunc.Curabitur orci id nulla maximus maximus.Nunc pulvinar sollicitudin molestie</p></div> ",
                            Desc = "Donec vitae hendrerit arcu, sit amet faucibus nisl. Cras pretium arcu ex. Aenean posuere libero eu augue condimentum rhoncus. Praesent ornare tortor ac ante egestas hendrerit. Aliquam et metus pharetra, bibendum massa nec, fermentum odio.",
                            LanguageId = 1,
                            Slug = "Other-Post",
                            Title = "Other Post"
                        },
                        new
                        {
                            Id = 11,
                            BlogId = 11,
                            Content = "<p>Aenean et tempor eros,vitae sollicitudin velit.Etiam varius enim nec quam tempor sed efficitur ex ultrices.Phasellus pretium est vel vestibulum condimentum.Aenean nec suscipit nibh.Phasellus nec lacus arcu facilisis elementum.Curabitur lobortiselit ut elementum congueerat ex bibendum odionec iaculis lacus sem non lorem.Duis metus antesed convallis quam posuere quis.Ut tincidunt eleifend odioac fringilla mi vehicula nec.Nunc vitae lacus eget lectus tempus sed in dui.Nam molestie magna at risus suscipit justo dignissim.Sed vitae fringilla enimnec arcu</p><blockquote><p>Quisque semper nunc vitae erat pellentesqueac placerat consectetur.In venenatis elit ac ultrices convallis.Duis est nisitincidunt ac urna sedcursus blandit lectus.In ullamcorper amet ligula ut eleifend.Proin dictum tempor ligulaac metus.Sed finibus tortor eu scelerisque scelerisque</p></blockquote><p>Aenean et tempor erosvitae sollicitudin velit.Etiam varius enim quam temporsed efficitur ex ultrices.Phasellus pretium est vel vestibulum condimentum.Aenean nec suscipit nibh.Phasellus nec lacus arcu facilisis elementum.Curabitur lobortiselit ut elementum congueerat ex bibendum odionec iaculis lacus sem non lorem.Duis metus antesed convallis quam posuere quis.Ut tincidunt eleifend odioac fringilla mi vehicula nec.Nunc vitae lacus eget lectus tempus sed in dui.Nam molestie magna at risus suscipit justo dignissim.Sed vitae fringilla enimnec arcu</p><p>Suspendisse turpis ipsumtempus in nulla euposuere pharetra nibh.dignissim vitae lorem non mollis.Praesent pretium tellus in viverra condimentum.Nullam dignissim facilisis nislaccumsan justo ultricies vel.Vivamus finibus mi a neque pretiumut dui lacinia.Morbi a rutrum velit.Curabitur sagittis quam consectetur mattis.Aenean sit amet quam vel turpis interdum sagittis eget neque.Nunc ante quamluctus et neque ainterdum iaculis metusAliquam vel ante mattisplacerat orci idvehicula quam.quis eros cursusviverra urna sedcommodo mauris.Cras diam arcufringilla a sem condimentumviverra facilisis nunc.Curabitur orci id nulla maximus maximus.Nunc pulvinar sollicitudin molestie</p></div> ",
                            Desc = "Donec vitae hendrerit arcu, sit amet faucibus nisl. Cras pretium arcu ex. Aenean posuere libero eu augue condimentum rhoncus. Praesent ornare tortor ac ante egestas hendrerit. Aliquam et metus pharetra, bibendum massa nec, fermentum odio.",
                            LanguageId = 1,
                            Slug = "Sticy-Post",
                            Title = "Sticy Post"
                        },
                        new
                        {
                            Id = 12,
                            BlogId = 12,
                            Content = "<p>Aenean et tempor eros,vitae sollicitudin velit.Etiam varius enim nec quam tempor sed efficitur ex ultrices.Phasellus pretium est vel vestibulum condimentum.Aenean nec suscipit nibh.Phasellus nec lacus arcu facilisis elementum.Curabitur lobortiselit ut elementum congueerat ex bibendum odionec iaculis lacus sem non lorem.Duis metus antesed convallis quam posuere quis.Ut tincidunt eleifend odioac fringilla mi vehicula nec.Nunc vitae lacus eget lectus tempus sed in dui.Nam molestie magna at risus suscipit justo dignissim.Sed vitae fringilla enimnec arcu</p><blockquote><p>Quisque semper nunc vitae erat pellentesqueac placerat consectetur.In venenatis elit ac ultrices convallis.Duis est nisitincidunt ac urna sedcursus blandit lectus.In ullamcorper amet ligula ut eleifend.Proin dictum tempor ligulaac metus.Sed finibus tortor eu scelerisque scelerisque</p></blockquote><p>Aenean et tempor erosvitae sollicitudin velit.Etiam varius enim quam temporsed efficitur ex ultrices.Phasellus pretium est vel vestibulum condimentum.Aenean nec suscipit nibh.Phasellus nec lacus arcu facilisis elementum.Curabitur lobortiselit ut elementum congueerat ex bibendum odionec iaculis lacus sem non lorem.Duis metus antesed convallis quam posuere quis.Ut tincidunt eleifend odioac fringilla mi vehicula nec.Nunc vitae lacus eget lectus tempus sed in dui.Nam molestie magna at risus suscipit justo dignissim.Sed vitae fringilla enimnec arcu</p><p>Suspendisse turpis ipsumtempus in nulla euposuere pharetra nibh.dignissim vitae lorem non mollis.Praesent pretium tellus in viverra condimentum.Nullam dignissim facilisis nislaccumsan justo ultricies vel.Vivamus finibus mi a neque pretiumut dui lacinia.Morbi a rutrum velit.Curabitur sagittis quam consectetur mattis.Aenean sit amet quam vel turpis interdum sagittis eget neque.Nunc ante quamluctus et neque ainterdum iaculis metusAliquam vel ante mattisplacerat orci idvehicula quam.quis eros cursusviverra urna sedcommodo mauris.Cras diam arcufringilla a sem condimentumviverra facilisis nunc.Curabitur orci id nulla maximus maximus.Nunc pulvinar sollicitudin molestie</p></div> ",
                            Desc = "Donec vitae hendrerit arcu, sit amet faucibus nisl. Cras pretium arcu ex. Aenean posuere libero eu augue condimentum rhoncus. Praesent ornare tortor ac ante egestas hendrerit. Aliquam et metus pharetra, bibendum massa nec, fermentum odio.",
                            LanguageId = 1,
                            Slug = "Travel-Post",
                            Title = "Travel Post"
                        },
                        new
                        {
                            Id = 13,
                            BlogId = 13,
                            Content = "<p>Aenean et tempor eros,vitae sollicitudin velit.Etiam varius enim nec quam tempor sed efficitur ex ultrices.Phasellus pretium est vel vestibulum condimentum.Aenean nec suscipit nibh.Phasellus nec lacus arcu facilisis elementum.Curabitur lobortiselit ut elementum congueerat ex bibendum odionec iaculis lacus sem non lorem.Duis metus antesed convallis quam posuere quis.Ut tincidunt eleifend odioac fringilla mi vehicula nec.Nunc vitae lacus eget lectus tempus sed in dui.Nam molestie magna at risus suscipit justo dignissim.Sed vitae fringilla enimnec arcu</p><blockquote><p>Quisque semper nunc vitae erat pellentesqueac placerat consectetur.In venenatis elit ac ultrices convallis.Duis est nisitincidunt ac urna sedcursus blandit lectus.In ullamcorper amet ligula ut eleifend.Proin dictum tempor ligulaac metus.Sed finibus tortor eu scelerisque scelerisque</p></blockquote><p>Aenean et tempor erosvitae sollicitudin velit.Etiam varius enim quam temporsed efficitur ex ultrices.Phasellus pretium est vel vestibulum condimentum.Aenean nec suscipit nibh.Phasellus nec lacus arcu facilisis elementum.Curabitur lobortiselit ut elementum congueerat ex bibendum odionec iaculis lacus sem non lorem.Duis metus antesed convallis quam posuere quis.Ut tincidunt eleifend odioac fringilla mi vehicula nec.Nunc vitae lacus eget lectus tempus sed in dui.Nam molestie magna at risus suscipit justo dignissim.Sed vitae fringilla enimnec arcu</p><p>Suspendisse turpis ipsumtempus in nulla euposuere pharetra nibh.dignissim vitae lorem non mollis.Praesent pretium tellus in viverra condimentum.Nullam dignissim facilisis nislaccumsan justo ultricies vel.Vivamus finibus mi a neque pretiumut dui lacinia.Morbi a rutrum velit.Curabitur sagittis quam consectetur mattis.Aenean sit amet quam vel turpis interdum sagittis eget neque.Nunc ante quamluctus et neque ainterdum iaculis metusAliquam vel ante mattisplacerat orci idvehicula quam.quis eros cursusviverra urna sedcommodo mauris.Cras diam arcufringilla a sem condimentumviverra facilisis nunc.Curabitur orci id nulla maximus maximus.Nunc pulvinar sollicitudin molestie</p></div> ",
                            Desc = "Donec vitae hendrerit arcu, sit amet faucibus nisl. Cras pretium arcu ex. Aenean posuere libero eu augue condimentum rhoncus. Praesent ornare tortor ac ante egestas hendrerit. Aliquam et metus pharetra, bibendum massa nec, fermentum odio.",
                            LanguageId = 1,
                            Slug = "Blog-with-Travel",
                            Title = "Blog with Travel"
                        },
                        new
                        {
                            Id = 14,
                            BlogId = 14,
                            Content = "<p>Aenean et tempor eros,vitae sollicitudin velit.Etiam varius enim nec quam tempor sed efficitur ex ultrices.Phasellus pretium est vel vestibulum condimentum.Aenean nec suscipit nibh.Phasellus nec lacus arcu facilisis elementum.Curabitur lobortiselit ut elementum congueerat ex bibendum odionec iaculis lacus sem non lorem.Duis metus antesed convallis quam posuere quis.Ut tincidunt eleifend odioac fringilla mi vehicula nec.Nunc vitae lacus eget lectus tempus sed in dui.Nam molestie magna at risus suscipit justo dignissim.Sed vitae fringilla enimnec arcu</p><blockquote><p>Quisque semper nunc vitae erat pellentesqueac placerat consectetur.In venenatis elit ac ultrices convallis.Duis est nisitincidunt ac urna sedcursus blandit lectus.In ullamcorper amet ligula ut eleifend.Proin dictum tempor ligulaac metus.Sed finibus tortor eu scelerisque scelerisque</p></blockquote><p>Aenean et tempor erosvitae sollicitudin velit.Etiam varius enim quam temporsed efficitur ex ultrices.Phasellus pretium est vel vestibulum condimentum.Aenean nec suscipit nibh.Phasellus nec lacus arcu facilisis elementum.Curabitur lobortiselit ut elementum congueerat ex bibendum odionec iaculis lacus sem non lorem.Duis metus antesed convallis quam posuere quis.Ut tincidunt eleifend odioac fringilla mi vehicula nec.Nunc vitae lacus eget lectus tempus sed in dui.Nam molestie magna at risus suscipit justo dignissim.Sed vitae fringilla enimnec arcu</p><p>Suspendisse turpis ipsumtempus in nulla euposuere pharetra nibh.dignissim vitae lorem non mollis.Praesent pretium tellus in viverra condimentum.Nullam dignissim facilisis nislaccumsan justo ultricies vel.Vivamus finibus mi a neque pretiumut dui lacinia.Morbi a rutrum velit.Curabitur sagittis quam consectetur mattis.Aenean sit amet quam vel turpis interdum sagittis eget neque.Nunc ante quamluctus et neque ainterdum iaculis metusAliquam vel ante mattisplacerat orci idvehicula quam.quis eros cursusviverra urna sedcommodo mauris.Cras diam arcufringilla a sem condimentumviverra facilisis nunc.Curabitur orci id nulla maximus maximus.Nunc pulvinar sollicitudin molestie</p></div> ",
                            Desc = "Donec vitae hendrerit arcu, sit amet faucibus nisl. Cras pretium arcu ex. Aenean posuere libero eu augue condimentum rhoncus. Praesent ornare tortor ac ante egestas hendrerit. Aliquam et metus pharetra, bibendum massa nec, fermentum odio.",
                            LanguageId = 1,
                            Slug = "Wordpress-Post",
                            Title = "Wordpress Post"
                        },
                        new
                        {
                            Id = 15,
                            BlogId = 15,
                            Content = "<p>Aenean et tempor eros,vitae sollicitudin velit.Etiam varius enim nec quam tempor sed efficitur ex ultrices.Phasellus pretium est vel vestibulum condimentum.Aenean nec suscipit nibh.Phasellus nec lacus arcu facilisis elementum.Curabitur lobortiselit ut elementum congueerat ex bibendum odionec iaculis lacus sem non lorem.Duis metus antesed convallis quam posuere quis.Ut tincidunt eleifend odioac fringilla mi vehicula nec.Nunc vitae lacus eget lectus tempus sed in dui.Nam molestie magna at risus suscipit justo dignissim.Sed vitae fringilla enimnec arcu</p><blockquote><p>Quisque semper nunc vitae erat pellentesqueac placerat consectetur.In venenatis elit ac ultrices convallis.Duis est nisitincidunt ac urna sedcursus blandit lectus.In ullamcorper amet ligula ut eleifend.Proin dictum tempor ligulaac metus.Sed finibus tortor eu scelerisque scelerisque</p></blockquote><p>Aenean et tempor erosvitae sollicitudin velit.Etiam varius enim quam temporsed efficitur ex ultrices.Phasellus pretium est vel vestibulum condimentum.Aenean nec suscipit nibh.Phasellus nec lacus arcu facilisis elementum.Curabitur lobortiselit ut elementum congueerat ex bibendum odionec iaculis lacus sem non lorem.Duis metus antesed convallis quam posuere quis.Ut tincidunt eleifend odioac fringilla mi vehicula nec.Nunc vitae lacus eget lectus tempus sed in dui.Nam molestie magna at risus suscipit justo dignissim.Sed vitae fringilla enimnec arcu</p><p>Suspendisse turpis ipsumtempus in nulla euposuere pharetra nibh.dignissim vitae lorem non mollis.Praesent pretium tellus in viverra condimentum.Nullam dignissim facilisis nislaccumsan justo ultricies vel.Vivamus finibus mi a neque pretiumut dui lacinia.Morbi a rutrum velit.Curabitur sagittis quam consectetur mattis.Aenean sit amet quam vel turpis interdum sagittis eget neque.Nunc ante quamluctus et neque ainterdum iaculis metusAliquam vel ante mattisplacerat orci idvehicula quam.quis eros cursusviverra urna sedcommodo mauris.Cras diam arcufringilla a sem condimentumviverra facilisis nunc.Curabitur orci id nulla maximus maximus.Nunc pulvinar sollicitudin molestie</p></div> ",
                            Desc = "Donec vitae hendrerit arcu, sit amet faucibus nisl. Cras pretium arcu ex. Aenean posuere libero eu augue condimentum rhoncus. Praesent ornare tortor ac ante egestas hendrerit. Aliquam et metus pharetra, bibendum massa nec, fermentum odio.",
                            LanguageId = 1,
                            Slug = "Company-Post",
                            Title = "Company Post"
                        },
                        new
                        {
                            Id = 17,
                            BlogId = 1,
                            Content = "<p>Bəzi orqanları 90 sarı tramvay və ya sarı metro adlı mətn yayılan həssas content daha müasir bir görünüş vermək üçün Lorem Ipsum dəyişin. Fransız və ya İngilis dili idi, lakin bir çox insanlar, istədiyiniz təsiri nail olunmayıb mətn oxumaq üçün axtarırdılar. Distractions səbəb ola bilər istiqamətləri olan, oxunaqlı mətn İş və bu layout diqqət kömək edə bilər.</p><p>Suspendisse turpis ipsumtempus in nulla euposuere pharetra nibh.dignissim vitae lorem non mollis.Praesent pretium tellus in viverra condimentum.Nullam dignissim facilisis nislaccumsan justo ultricies vel.Vivamus finibus mi a neque pretiumut dui lacinia.Morbi a rutrum velit.Curabitur sagittis quam consectetur mattis.Aenean sit amet quam vel turpis interdum sagittis eget neque.Nunc ante quamluctus et neque ainterdum iaculis metusAliquam vel ante mattisplacerat orci idvehicula quam.quis eros cursusviverra urna sedcommodo mauris.Cras diam arcufringilla a sem condimentumviverra facilisis nunc.Curabitur orci id nulla maximus maximus.Nunc pulvinar sollicitudin molestie</p></div> ",
                            Desc = "LoremIpsum360 ° pulsuz online generator saxta mətn. Bu modellər üçün əvəz mətn və ya alternativ mətn yaratmaq üçün tam mətn simulator edir. Bu müxtəlif dillərdə mətnlərin nümunələri yaratmaq üçün latın və kiril qrafikası ilə müxtəlif təsadüfi mətnlər edir.",
                            LanguageId = 2,
                            Slug = "xabar-sakil-paylasimi",
                            Title = "Xəbər Şəkil Paylaşımı"
                        },
                        new
                        {
                            Id = 18,
                            BlogId = 2,
                            Content = "<p>Bəzi orqanları 90 sarı tramvay və ya sarı metro adlı mətn yayılan həssas content daha müasir bir görünüş vermək üçün Lorem Ipsum dəyişin. Fransız və ya İngilis dili idi, lakin bir çox insanlar, istədiyiniz təsiri nail olunmayıb mətn oxumaq üçün axtarırdılar. Distractions səbəb ola bilər istiqamətləri olan, oxunaqlı mətn İş və bu layout diqqət kömək edə bilər.</p><p>Suspendisse turpis ipsumtempus in nulla euposuere pharetra nibh.dignissim vitae lorem non mollis.Praesent pretium tellus in viverra condimentum.Nullam dignissim facilisis nislaccumsan justo ultricies vel.Vivamus finibus mi a neque pretiumut dui lacinia.Morbi a rutrum velit.Curabitur sagittis quam consectetur mattis.Aenean sit amet quam vel turpis interdum sagittis eget neque.Nunc ante quamluctus et neque ainterdum iaculis metusAliquam vel ante mattisplacerat orci idvehicula quam.quis eros cursusviverra urna sedcommodo mauris.Cras diam arcufringilla a sem condimentumviverra facilisis nunc.Curabitur orci id nulla maximus maximus.Nunc pulvinar sollicitudin molestie</p></div> ",
                            Desc = "LoremIpsum360 ° pulsuz online generator saxta mətn. Bu modellər üçün əvəz mətn və ya alternativ mətn yaratmaq üçün tam mətn simulator edir. Bu müxtəlif dillərdə mətnlərin nümunələri yaratmaq üçün latın və kiril qrafikası ilə müxtəlif təsadüfi mətnlər edir.",
                            LanguageId = 2,
                            Slug = "qalaraya-paylasimi",
                            Title = "Qalareya Paylaşımı"
                        },
                        new
                        {
                            Id = 19,
                            BlogId = 3,
                            Content = "<p>Bəzi orqanları 90 sarı tramvay və ya sarı metro adlı mətn yayılan həssas content daha müasir bir görünüş vermək üçün Lorem Ipsum dəyişin. Fransız və ya İngilis dili idi, lakin bir çox insanlar, istədiyiniz təsiri nail olunmayıb mətn oxumaq üçün axtarırdılar. Distractions səbəb ola bilər istiqamətləri olan, oxunaqlı mətn İş və bu layout diqqət kömək edə bilər.</p><p>Suspendisse turpis ipsumtempus in nulla euposuere pharetra nibh.dignissim vitae lorem non mollis.Praesent pretium tellus in viverra condimentum.Nullam dignissim facilisis nislaccumsan justo ultricies vel.Vivamus finibus mi a neque pretiumut dui lacinia.Morbi a rutrum velit.Curabitur sagittis quam consectetur mattis.Aenean sit amet quam vel turpis interdum sagittis eget neque.Nunc ante quamluctus et neque ainterdum iaculis metusAliquam vel ante mattisplacerat orci idvehicula quam.quis eros cursusviverra urna sedcommodo mauris.Cras diam arcufringilla a sem condimentumviverra facilisis nunc.Curabitur orci id nulla maximus maximus.Nunc pulvinar sollicitudin molestie</p></div> ",
                            Desc = "LoremIpsum360 ° pulsuz online generator saxta mətn. Bu modellər üçün əvəz mətn və ya alternativ mətn yaratmaq üçün tam mətn simulator edir. Bu müxtəlif dillərdə mətnlərin nümunələri yaratmaq üçün latın və kiril qrafikası ilə müxtəlif təsadüfi mətnlər edir.",
                            LanguageId = 2,
                            Slug = "texniki-paylasim",
                            Title = "Texniki Paylaşım"
                        },
                        new
                        {
                            Id = 20,
                            BlogId = 4,
                            Content = "<p>Bəzi orqanları 90 sarı tramvay və ya sarı metro adlı mətn yayılan həssas content daha müasir bir görünüş vermək üçün Lorem Ipsum dəyişin. Fransız və ya İngilis dili idi, lakin bir çox insanlar, istədiyiniz təsiri nail olunmayıb mətn oxumaq üçün axtarırdılar. Distractions səbəb ola bilər istiqamətləri olan, oxunaqlı mətn İş və bu layout diqqət kömək edə bilər.</p><p>Suspendisse turpis ipsumtempus in nulla euposuere pharetra nibh.dignissim vitae lorem non mollis.Praesent pretium tellus in viverra condimentum.Nullam dignissim facilisis nislaccumsan justo ultricies vel.Vivamus finibus mi a neque pretiumut dui lacinia.Morbi a rutrum velit.Curabitur sagittis quam consectetur mattis.Aenean sit amet quam vel turpis interdum sagittis eget neque.Nunc ante quamluctus et neque ainterdum iaculis metusAliquam vel ante mattisplacerat orci idvehicula quam.quis eros cursusviverra urna sedcommodo mauris.Cras diam arcufringilla a sem condimentumviverra facilisis nunc.Curabitur orci id nulla maximus maximus.Nunc pulvinar sollicitudin molestie</p></div> ",
                            Desc = "LoremIpsum360 ° pulsuz online generator saxta mətn. Bu modellər üçün əvəz mətn və ya alternativ mətn yaratmaq üçün tam mətn simulator edir. Bu müxtəlif dillərdə mətnlərin nümunələri yaratmaq üçün latın və kiril qrafikası ilə müxtəlif təsadüfi mətnlər edir.",
                            LanguageId = 2,
                            Slug = "elektronika",
                            Title = "Elektrotexnika"
                        },
                        new
                        {
                            Id = 21,
                            BlogId = 5,
                            Content = "<p>Bəzi orqanları 90 sarı tramvay və ya sarı metro adlı mətn yayılan həssas content daha müasir bir görünüş vermək üçün Lorem Ipsum dəyişin. Fransız və ya İngilis dili idi, lakin bir çox insanlar, istədiyiniz təsiri nail olunmayıb mətn oxumaq üçün axtarırdılar. Distractions səbəb ola bilər istiqamətləri olan, oxunaqlı mətn İş və bu layout diqqət kömək edə bilər.</p><p>Suspendisse turpis ipsumtempus in nulla euposuere pharetra nibh.dignissim vitae lorem non mollis.Praesent pretium tellus in viverra condimentum.Nullam dignissim facilisis nislaccumsan justo ultricies vel.Vivamus finibus mi a neque pretiumut dui lacinia.Morbi a rutrum velit.Curabitur sagittis quam consectetur mattis.Aenean sit amet quam vel turpis interdum sagittis eget neque.Nunc ante quamluctus et neque ainterdum iaculis metusAliquam vel ante mattisplacerat orci idvehicula quam.quis eros cursusviverra urna sedcommodo mauris.Cras diam arcufringilla a sem condimentumviverra facilisis nunc.Curabitur orci id nulla maximus maximus.Nunc pulvinar sollicitudin molestie</p></div> ",
                            Desc = "LoremIpsum360 ° pulsuz online generator saxta mətn. Bu modellər üçün əvəz mətn və ya alternativ mətn yaratmaq üçün tam mətn simulator edir. Bu müxtəlif dillərdə mətnlərin nümunələri yaratmaq üçün latın və kiril qrafikası ilə müxtəlif təsadüfi mətnlər edir.",
                            LanguageId = 2,
                            Slug = "yeni-robotlar",
                            Title = "Yeni Robotlar"
                        },
                        new
                        {
                            Id = 23,
                            BlogId = 6,
                            Content = "<p>Bəzi orqanları 90 sarı tramvay və ya sarı metro adlı mətn yayılan həssas content daha müasir bir görünüş vermək üçün Lorem Ipsum dəyişin. Fransız və ya İngilis dili idi, lakin bir çox insanlar, istədiyiniz təsiri nail olunmayıb mətn oxumaq üçün axtarırdılar. Distractions səbəb ola bilər istiqamətləri olan, oxunaqlı mətn İş və bu layout diqqət kömək edə bilər.</p><p>Suspendisse turpis ipsumtempus in nulla euposuere pharetra nibh.dignissim vitae lorem non mollis.Praesent pretium tellus in viverra condimentum.Nullam dignissim facilisis nislaccumsan justo ultricies vel.Vivamus finibus mi a neque pretiumut dui lacinia.Morbi a rutrum velit.Curabitur sagittis quam consectetur mattis.Aenean sit amet quam vel turpis interdum sagittis eget neque.Nunc ante quamluctus et neque ainterdum iaculis metusAliquam vel ante mattisplacerat orci idvehicula quam.quis eros cursusviverra urna sedcommodo mauris.Cras diam arcufringilla a sem condimentumviverra facilisis nunc.Curabitur orci id nulla maximus maximus.Nunc pulvinar sollicitudin molestie</p></div> ",
                            Desc = "LoremIpsum360 ° pulsuz online generator saxta mətn. Bu modellər üçün əvəz mətn və ya alternativ mətn yaratmaq üçün tam mətn simulator edir. Bu müxtəlif dillərdə mətnlərin nümunələri yaratmaq üçün latın və kiril qrafikası ilə müxtəlif təsadüfi mətnlər edir.",
                            LanguageId = 2,
                            Slug = "yeni-iphone-11",
                            Title = "Yeni İphone 11"
                        },
                        new
                        {
                            Id = 24,
                            BlogId = 7,
                            Content = "<p>Bəzi orqanları 90 sarı tramvay və ya sarı metro adlı mətn yayılan həssas content daha müasir bir görünüş vermək üçün Lorem Ipsum dəyişin. Fransız və ya İngilis dili idi, lakin bir çox insanlar, istədiyiniz təsiri nail olunmayıb mətn oxumaq üçün axtarırdılar. Distractions səbəb ola bilər istiqamətləri olan, oxunaqlı mətn İş və bu layout diqqət kömək edə bilər.</p><p>Suspendisse turpis ipsumtempus in nulla euposuere pharetra nibh.dignissim vitae lorem non mollis.Praesent pretium tellus in viverra condimentum.Nullam dignissim facilisis nislaccumsan justo ultricies vel.Vivamus finibus mi a neque pretiumut dui lacinia.Morbi a rutrum velit.Curabitur sagittis quam consectetur mattis.Aenean sit amet quam vel turpis interdum sagittis eget neque.Nunc ante quamluctus et neque ainterdum iaculis metusAliquam vel ante mattisplacerat orci idvehicula quam.quis eros cursusviverra urna sedcommodo mauris.Cras diam arcufringilla a sem condimentumviverra facilisis nunc.Curabitur orci id nulla maximus maximus.Nunc pulvinar sollicitudin molestie</p></div> ",
                            Desc = "LoremIpsum360 ° pulsuz online generator saxta mətn. Bu modellər üçün əvəz mətn və ya alternativ mətn yaratmaq üçün tam mətn simulator edir. Bu müxtəlif dillərdə mətnlərin nümunələri yaratmaq üçün latın və kiril qrafikası ilə müxtəlif təsadüfi mətnlər edir.",
                            LanguageId = 2,
                            Slug = "seyahet-paylasimi",
                            Title = "Səyahət Paylaşımı"
                        },
                        new
                        {
                            Id = 25,
                            BlogId = 8,
                            Content = "<p>Bəzi orqanları 90 sarı tramvay və ya sarı metro adlı mətn yayılan həssas content daha müasir bir görünüş vermək üçün Lorem Ipsum dəyişin. Fransız və ya İngilis dili idi, lakin bir çox insanlar, istədiyiniz təsiri nail olunmayıb mətn oxumaq üçün axtarırdılar. Distractions səbəb ola bilər istiqamətləri olan, oxunaqlı mətn İş və bu layout diqqət kömək edə bilər.</p><p>Suspendisse turpis ipsumtempus in nulla euposuere pharetra nibh.dignissim vitae lorem non mollis.Praesent pretium tellus in viverra condimentum.Nullam dignissim facilisis nislaccumsan justo ultricies vel.Vivamus finibus mi a neque pretiumut dui lacinia.Morbi a rutrum velit.Curabitur sagittis quam consectetur mattis.Aenean sit amet quam vel turpis interdum sagittis eget neque.Nunc ante quamluctus et neque ainterdum iaculis metusAliquam vel ante mattisplacerat orci idvehicula quam.quis eros cursusviverra urna sedcommodo mauris.Cras diam arcufringilla a sem condimentumviverra facilisis nunc.Curabitur orci id nulla maximus maximus.Nunc pulvinar sollicitudin molestie</p></div> ",
                            Desc = "LoremIpsum360 ° pulsuz online generator saxta mətn. Bu modellər üçün əvəz mətn və ya alternativ mətn yaratmaq üçün tam mətn simulator edir. Bu müxtəlif dillərdə mətnlərin nümunələri yaratmaq üçün latın və kiril qrafikası ilə müxtəlif təsadüfi mətnlər edir.",
                            LanguageId = 2,
                            Slug = "sirketler",
                            Title = "Şirkətlər"
                        },
                        new
                        {
                            Id = 26,
                            BlogId = 9,
                            Content = "<p>Bəzi orqanları 90 sarı tramvay və ya sarı metro adlı mətn yayılan həssas content daha müasir bir görünüş vermək üçün Lorem Ipsum dəyişin. Fransız və ya İngilis dili idi, lakin bir çox insanlar, istədiyiniz təsiri nail olunmayıb mətn oxumaq üçün axtarırdılar. Distractions səbəb ola bilər istiqamətləri olan, oxunaqlı mətn İş və bu layout diqqət kömək edə bilər.</p><p>Suspendisse turpis ipsumtempus in nulla euposuere pharetra nibh.dignissim vitae lorem non mollis.Praesent pretium tellus in viverra condimentum.Nullam dignissim facilisis nislaccumsan justo ultricies vel.Vivamus finibus mi a neque pretiumut dui lacinia.Morbi a rutrum velit.Curabitur sagittis quam consectetur mattis.Aenean sit amet quam vel turpis interdum sagittis eget neque.Nunc ante quamluctus et neque ainterdum iaculis metusAliquam vel ante mattisplacerat orci idvehicula quam.quis eros cursusviverra urna sedcommodo mauris.Cras diam arcufringilla a sem condimentumviverra facilisis nunc.Curabitur orci id nulla maximus maximus.Nunc pulvinar sollicitudin molestie</p></div> ",
                            Desc = "LoremIpsum360 ° pulsuz online generator saxta mətn. Bu modellər üçün əvəz mətn və ya alternativ mətn yaratmaq üçün tam mətn simulator edir. Bu müxtəlif dillərdə mətnlərin nümunələri yaratmaq üçün latın və kiril qrafikası ilə müxtəlif təsadüfi mətnlər edir.",
                            LanguageId = 2,
                            Slug = "yeni-trendler",
                            Title = "Yeni trendlər"
                        },
                        new
                        {
                            Id = 27,
                            BlogId = 10,
                            Content = "<p>Bəzi orqanları 90 sarı tramvay və ya sarı metro adlı mətn yayılan həssas content daha müasir bir görünüş vermək üçün Lorem Ipsum dəyişin. Fransız və ya İngilis dili idi, lakin bir çox insanlar, istədiyiniz təsiri nail olunmayıb mətn oxumaq üçün axtarırdılar. Distractions səbəb ola bilər istiqamətləri olan, oxunaqlı mətn İş və bu layout diqqət kömək edə bilər.</p><p>Suspendisse turpis ipsumtempus in nulla euposuere pharetra nibh.dignissim vitae lorem non mollis.Praesent pretium tellus in viverra condimentum.Nullam dignissim facilisis nislaccumsan justo ultricies vel.Vivamus finibus mi a neque pretiumut dui lacinia.Morbi a rutrum velit.Curabitur sagittis quam consectetur mattis.Aenean sit amet quam vel turpis interdum sagittis eget neque.Nunc ante quamluctus et neque ainterdum iaculis metusAliquam vel ante mattisplacerat orci idvehicula quam.quis eros cursusviverra urna sedcommodo mauris.Cras diam arcufringilla a sem condimentumviverra facilisis nunc.Curabitur orci id nulla maximus maximus.Nunc pulvinar sollicitudin molestie</p></div> ",
                            Desc = "LoremIpsum360 ° pulsuz online generator saxta mətn. Bu modellər üçün əvəz mətn və ya alternativ mətn yaratmaq üçün tam mətn simulator edir. Bu müxtəlif dillərdə mətnlərin nümunələri yaratmaq üçün latın və kiril qrafikası ilə müxtəlif təsadüfi mətnlər edir.",
                            LanguageId = 2,
                            Slug = "diger-paylasim",
                            Title = "Digər Paylaşım"
                        },
                        new
                        {
                            Id = 28,
                            BlogId = 11,
                            Content = "<p>Bəzi orqanları 90 sarı tramvay və ya sarı metro adlı mətn yayılan həssas content daha müasir bir görünüş vermək üçün Lorem Ipsum dəyişin. Fransız və ya İngilis dili idi, lakin bir çox insanlar, istədiyiniz təsiri nail olunmayıb mətn oxumaq üçün axtarırdılar. Distractions səbəb ola bilər istiqamətləri olan, oxunaqlı mətn İş və bu layout diqqət kömək edə bilər.</p><p>Suspendisse turpis ipsumtempus in nulla euposuere pharetra nibh.dignissim vitae lorem non mollis.Praesent pretium tellus in viverra condimentum.Nullam dignissim facilisis nislaccumsan justo ultricies vel.Vivamus finibus mi a neque pretiumut dui lacinia.Morbi a rutrum velit.Curabitur sagittis quam consectetur mattis.Aenean sit amet quam vel turpis interdum sagittis eget neque.Nunc ante quamluctus et neque ainterdum iaculis metusAliquam vel ante mattisplacerat orci idvehicula quam.quis eros cursusviverra urna sedcommodo mauris.Cras diam arcufringilla a sem condimentumviverra facilisis nunc.Curabitur orci id nulla maximus maximus.Nunc pulvinar sollicitudin molestie</p></div> ",
                            Desc = "LoremIpsum360 ° pulsuz online generator saxta mətn. Bu modellər üçün əvəz mətn və ya alternativ mətn yaratmaq üçün tam mətn simulator edir. Bu müxtəlif dillərdə mətnlərin nümunələri yaratmaq üçün latın və kiril qrafikası ilə müxtəlif təsadüfi mətnlər edir.",
                            LanguageId = 2,
                            Slug = "robot-istehsali",
                            Title = "Robot istehsalı"
                        },
                        new
                        {
                            Id = 29,
                            BlogId = 12,
                            Content = "<p>Bəzi orqanları 90 sarı tramvay və ya sarı metro adlı mətn yayılan həssas content daha müasir bir görünüş vermək üçün Lorem Ipsum dəyişin. Fransız və ya İngilis dili idi, lakin bir çox insanlar, istədiyiniz təsiri nail olunmayıb mətn oxumaq üçün axtarırdılar. Distractions səbəb ola bilər istiqamətləri olan, oxunaqlı mətn İş və bu layout diqqət kömək edə bilər.</p><p>Suspendisse turpis ipsumtempus in nulla euposuere pharetra nibh.dignissim vitae lorem non mollis.Praesent pretium tellus in viverra condimentum.Nullam dignissim facilisis nislaccumsan justo ultricies vel.Vivamus finibus mi a neque pretiumut dui lacinia.Morbi a rutrum velit.Curabitur sagittis quam consectetur mattis.Aenean sit amet quam vel turpis interdum sagittis eget neque.Nunc ante quamluctus et neque ainterdum iaculis metusAliquam vel ante mattisplacerat orci idvehicula quam.quis eros cursusviverra urna sedcommodo mauris.Cras diam arcufringilla a sem condimentumviverra facilisis nunc.Curabitur orci id nulla maximus maximus.Nunc pulvinar sollicitudin molestie</p></div> ",
                            Desc = "LoremIpsum360 ° pulsuz online generator saxta mətn. Bu modellər üçün əvəz mətn və ya alternativ mətn yaratmaq üçün tam mətn simulator edir. Bu müxtəlif dillərdə mətnlərin nümunələri yaratmaq üçün latın və kiril qrafikası ilə müxtəlif təsadüfi mətnlər edir.",
                            LanguageId = 2,
                            Slug = "avadanliqlar",
                            Title = "Avadanlıqlar"
                        },
                        new
                        {
                            Id = 30,
                            BlogId = 13,
                            Content = "<p>Bəzi orqanları 90 sarı tramvay və ya sarı metro adlı mətn yayılan həssas content daha müasir bir görünüş vermək üçün Lorem Ipsum dəyişin. Fransız və ya İngilis dili idi, lakin bir çox insanlar, istədiyiniz təsiri nail olunmayıb mətn oxumaq üçün axtarırdılar. Distractions səbəb ola bilər istiqamətləri olan, oxunaqlı mətn İş və bu layout diqqət kömək edə bilər.</p><p>Suspendisse turpis ipsumtempus in nulla euposuere pharetra nibh.dignissim vitae lorem non mollis.Praesent pretium tellus in viverra condimentum.Nullam dignissim facilisis nislaccumsan justo ultricies vel.Vivamus finibus mi a neque pretiumut dui lacinia.Morbi a rutrum velit.Curabitur sagittis quam consectetur mattis.Aenean sit amet quam vel turpis interdum sagittis eget neque.Nunc ante quamluctus et neque ainterdum iaculis metusAliquam vel ante mattisplacerat orci idvehicula quam.quis eros cursusviverra urna sedcommodo mauris.Cras diam arcufringilla a sem condimentumviverra facilisis nunc.Curabitur orci id nulla maximus maximus.Nunc pulvinar sollicitudin molestie</p></div> ",
                            Desc = "LoremIpsum360 ° pulsuz online generator saxta mətn. Bu modellər üçün əvəz mətn və ya alternativ mətn yaratmaq üçün tam mətn simulator edir. Bu müxtəlif dillərdə mətnlərin nümunələri yaratmaq üçün latın və kiril qrafikası ilə müxtəlif təsadüfi mətnlər edir.",
                            LanguageId = 2,
                            Slug = "aksesuarlar",
                            Title = "Aksesuarlar"
                        },
                        new
                        {
                            Id = 31,
                            BlogId = 14,
                            Content = "<p>Bəzi orqanları 90 sarı tramvay və ya sarı metro adlı mətn yayılan həssas content daha müasir bir görünüş vermək üçün Lorem Ipsum dəyişin. Fransız və ya İngilis dili idi, lakin bir çox insanlar, istədiyiniz təsiri nail olunmayıb mətn oxumaq üçün axtarırdılar. Distractions səbəb ola bilər istiqamətləri olan, oxunaqlı mətn İş və bu layout diqqət kömək edə bilər.</p><p>Suspendisse turpis ipsumtempus in nulla euposuere pharetra nibh.dignissim vitae lorem non mollis.Praesent pretium tellus in viverra condimentum.Nullam dignissim facilisis nislaccumsan justo ultricies vel.Vivamus finibus mi a neque pretiumut dui lacinia.Morbi a rutrum velit.Curabitur sagittis quam consectetur mattis.Aenean sit amet quam vel turpis interdum sagittis eget neque.Nunc ante quamluctus et neque ainterdum iaculis metusAliquam vel ante mattisplacerat orci idvehicula quam.quis eros cursusviverra urna sedcommodo mauris.Cras diam arcufringilla a sem condimentumviverra facilisis nunc.Curabitur orci id nulla maximus maximus.Nunc pulvinar sollicitudin molestie</p></div> ",
                            Desc = "LoremIpsum360 ° pulsuz online generator saxta mətn. Bu modellər üçün əvəz mətn və ya alternativ mətn yaratmaq üçün tam mətn simulator edir. Bu müxtəlif dillərdə mətnlərin nümunələri yaratmaq üçün latın və kiril qrafikası ilə müxtəlif təsadüfi mətnlər edir.",
                            LanguageId = 2,
                            Slug = "yeni-tozsoram",
                            Title = "Yeni Tozsoran"
                        },
                        new
                        {
                            Id = 32,
                            BlogId = 15,
                            Content = "<p>Bəzi orqanları 90 sarı tramvay və ya sarı metro adlı mətn yayılan həssas content daha müasir bir görünüş vermək üçün Lorem Ipsum dəyişin. Fransız və ya İngilis dili idi, lakin bir çox insanlar, istədiyiniz təsiri nail olunmayıb mətn oxumaq üçün axtarırdılar. Distractions səbəb ola bilər istiqamətləri olan, oxunaqlı mətn İş və bu layout diqqət kömək edə bilər.</p><p>Suspendisse turpis ipsumtempus in nulla euposuere pharetra nibh.dignissim vitae lorem non mollis.Praesent pretium tellus in viverra condimentum.Nullam dignissim facilisis nislaccumsan justo ultricies vel.Vivamus finibus mi a neque pretiumut dui lacinia.Morbi a rutrum velit.Curabitur sagittis quam consectetur mattis.Aenean sit amet quam vel turpis interdum sagittis eget neque.Nunc ante quamluctus et neque ainterdum iaculis metusAliquam vel ante mattisplacerat orci idvehicula quam.quis eros cursusviverra urna sedcommodo mauris.Cras diam arcufringilla a sem condimentumviverra facilisis nunc.Curabitur orci id nulla maximus maximus.Nunc pulvinar sollicitudin molestie</p></div> ",
                            Desc = "LoremIpsum360 ° pulsuz online generator saxta mətn. Bu modellər üçün əvəz mətn və ya alternativ mətn yaratmaq üçün tam mətn simulator edir. Bu müxtəlif dillərdə mətnlərin nümunələri yaratmaq üçün latın və kiril qrafikası ilə müxtəlif təsadüfi mətnlər edir.",
                            LanguageId = 2,
                            Slug = "yeni-paylasim",
                            Title = "Yeni paylaşım"
                        });
                });

            modelBuilder.Entity("Junko.ModelTranslate.OurServiceTranslate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<int>("OurServiceId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("OurServiceId");

                    b.ToTable("OurServiceTranslates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Desc = "Typi non habent claritatem insitam; est usus legentis in iis qui facit eorum claritatem.",
                            LanguageId = 1,
                            OurServiceId = 1,
                            Title = "BRANDING"
                        },
                        new
                        {
                            Id = 2,
                            Desc = "Typi non habent claritatem insitam; est usus legentis in iis qui facit eorum claritatem.",
                            LanguageId = 1,
                            OurServiceId = 2,
                            Title = "WEB DESIGN"
                        },
                        new
                        {
                            Id = 3,
                            Desc = "Typi non habent claritatem insitam; est usus legentis in iis qui facit eorum claritatem.",
                            LanguageId = 1,
                            OurServiceId = 3,
                            Title = "PHOTOGRAPHY"
                        },
                        new
                        {
                            Id = 4,
                            Desc = "Typi non habent claritatem insitam; est usus legentis in iis qui facit eorum claritatem.",
                            LanguageId = 1,
                            OurServiceId = 4,
                            Title = "WEB DEVELOPMENT"
                        },
                        new
                        {
                            Id = 5,
                            Desc = "Typi non habent claritatem insitam; est usus legentis in iis qui facit eorum claritatem.",
                            LanguageId = 1,
                            OurServiceId = 5,
                            Title = "CODING"
                        },
                        new
                        {
                            Id = 6,
                            Desc = "Typi non habent claritatem insitam; est usus legentis in iis qui facit eorum claritatem.",
                            LanguageId = 1,
                            OurServiceId = 6,
                            Title = "MARKETING"
                        },
                        new
                        {
                            Id = 7,
                            Desc = "Typi non habent claritatem insitam; est usus legentis in iis qui facit eorum claritatem.",
                            LanguageId = 1,
                            OurServiceId = 7,
                            Title = "SUPPORT"
                        },
                        new
                        {
                            Id = 8,
                            Desc = "Typi non habent claritatem insitam; est usus legentis in iis qui facit eorum claritatem.",
                            LanguageId = 1,
                            OurServiceId = 8,
                            Title = "GRAPHIC DESIGN"
                        },
                        new
                        {
                            Id = 9,
                            Desc = "Typi non habent claritatem insitam; est usus legentis in iis qui facit eorum claritatem.",
                            LanguageId = 2,
                            OurServiceId = 1,
                            Title = "Brendinq"
                        },
                        new
                        {
                            Id = 10,
                            Desc = "Typi non habent claritatem insitam; est usus legentis in iis qui facit eorum claritatem.",
                            LanguageId = 2,
                            OurServiceId = 2,
                            Title = "Web Dizayn"
                        },
                        new
                        {
                            Id = 11,
                            Desc = "Typi non habent claritatem insitam; est usus legentis in iis qui facit eorum claritatem.",
                            LanguageId = 2,
                            OurServiceId = 3,
                            Title = "Potoqrafiya"
                        },
                        new
                        {
                            Id = 12,
                            Desc = "Typi non habent claritatem insitam; est usus legentis in iis qui facit eorum claritatem.",
                            LanguageId = 2,
                            OurServiceId = 4,
                            Title = "Web proqranlaşdırma"
                        },
                        new
                        {
                            Id = 13,
                            Desc = "Typi non habent claritatem insitam; est usus legentis in iis qui facit eorum claritatem.",
                            LanguageId = 2,
                            OurServiceId = 5,
                            Title = "Kod"
                        },
                        new
                        {
                            Id = 14,
                            Desc = "Typi non habent claritatem insitam; est usus legentis in iis qui facit eorum claritatem.",
                            LanguageId = 2,
                            OurServiceId = 6,
                            Title = "Marketinq"
                        },
                        new
                        {
                            Id = 15,
                            Desc = "Typi non habent claritatem insitam; est usus legentis in iis qui facit eorum claritatem.",
                            LanguageId = 2,
                            OurServiceId = 7,
                            Title = "Təchizat"
                        },
                        new
                        {
                            Id = 16,
                            Desc = "Typi non habent claritatem insitam; est usus legentis in iis qui facit eorum claritatem.",
                            LanguageId = 2,
                            OurServiceId = 8,
                            Title = "Qrafik Dizayn"
                        });
                });

            modelBuilder.Entity("Junko.ModelTranslate.ServicesCoverTranslate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<int>("ServicesCoverId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("ServicesCoverId");

                    b.ToTable("ServicesCoverTranslates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Desc = "Mirum est notare quam littera gothica, quam nunc putamus parum claram, anteposuerit litterarum formas humanitatis per seacula quarta decima et quinta decima.",
                            LanguageId = 1,
                            ServicesCoverId = 1,
                            Title = "DESIGN THE COVER"
                        },
                        new
                        {
                            Id = 2,
                            Desc = "Mirum est notare quam littera gothica, quam nunc putamus parum claram, anteposuerit litterarum formas humanitatis per seacula quarta decima et quinta decima.",
                            LanguageId = 1,
                            ServicesCoverId = 2,
                            Title = "DESIGN THE COVER"
                        },
                        new
                        {
                            Id = 3,
                            Desc = "Mirum est notare quam littera gothica, quam nunc putamus parum claram, anteposuerit litterarum formas humanitatis per seacula quarta decima et quinta decima.",
                            LanguageId = 1,
                            ServicesCoverId = 3,
                            Title = "DESIGN THE COVER"
                        },
                        new
                        {
                            Id = 4,
                            Desc = "Usuf öy usuf həncərsən ayna durinan beyjə öy yağlaşoy, sumsux qredit siyəndər vızqırt yağlaşoy qağa basırıx mamoa bimürvət dayna aya siyəndər anarıdan-bəri ölüm.",
                            LanguageId = 2,
                            ServicesCoverId = 1,
                            Title = "ƏSAS DİZAYN"
                        },
                        new
                        {
                            Id = 5,
                            Desc = "Usuf öy usuf həncərsən ayna durinan beyjə öy yağlaşoy, sumsux qredit siyəndər vızqırt yağlaşoy qağa basırıx mamoa bimürvət dayna aya siyəndər anarıdan-bəri ölüm.",
                            LanguageId = 2,
                            ServicesCoverId = 2,
                            Title = "ƏSAS DİZAYN"
                        },
                        new
                        {
                            Id = 6,
                            Desc = "Usuf öy usuf həncərsən ayna durinan beyjə öy yağlaşoy, sumsux qredit siyəndər vızqırt yağlaşoy qağa basırıx mamoa bimürvət dayna aya siyəndər anarıdan-bəri ölüm.",
                            LanguageId = 2,
                            ServicesCoverId = 3,
                            Title = "ƏSAS DİZAYN"
                        });
                });

            modelBuilder.Entity("Junko.ModelTranslate.WhatDoTranslate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(600)")
                        .HasMaxLength(600);

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("WhatDoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("WhatDoId");

                    b.ToTable("WhatDosTranslates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Desc = "Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using ‘Content here, content here’, making it look like readable English.",
                            LanguageId = 1,
                            Title = "What Do We Do?",
                            WhatDoId = 1
                        },
                        new
                        {
                            Id = 2,
                            Desc = "Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using ‘Content here, content here’, making it look like readable English.",
                            LanguageId = 1,
                            Title = "History Of Us",
                            WhatDoId = 2
                        },
                        new
                        {
                            Id = 3,
                            Desc = "Beyjə murtta səni yağlaşoy səni göyüz xışdıyaram, qağa ciji qayır öy a qıvlasız mamoğlu dığlatdın, eşiy anarıdan-bəri səni öy qayır. Çırtımına yiyə dursan? ayna durinan suruxvat ayna durinan dayna sülöymən kiri a qıvlasız səni, ciji siyəndər qalet murtta dığlatdın dınqı anarıdan-bəri, qavağında ölöm döyğa tutaşmıyın mamoğlu a bimürvət ayna durinan mığı.",
                            LanguageId = 2,
                            Title = "Fəaliyyətimiz Nədir?",
                            WhatDoId = 1
                        },
                        new
                        {
                            Id = 4,
                            Desc = "Beyjə murtta səni yağlaşoy səni göyüz xışdıyaram, qağa ciji qayır öy a qıvlasız mamoğlu dığlatdın, eşiy anarıdan-bəri səni öy qayır. Çırtımına yiyə dursan? ayna durinan suruxvat ayna durinan dayna sülöymən kiri a qıvlasız səni, ciji siyəndər qalet murtta dığlatdın dınqı anarıdan-bəri, qavağında ölöm döyğa tutaşmıyın mamoğlu a bimürvət ayna durinan mığı.",
                            LanguageId = 2,
                            Title = "Tariximiz",
                            WhatDoId = 2
                        });
                });

            modelBuilder.Entity("Junko.Models.AboutSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AdminManagerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("AdminManagerId");

                    b.ToTable("AboutSettings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdminManagerId = 1,
                            ModifiedAt = new DateTime(2019, 12, 25, 15, 42, 24, 424, DateTimeKind.Local).AddTicks(2861),
                            Photo = "about/about1.jpg"
                        });
                });

            modelBuilder.Entity("Junko.Models.AdminCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("AdminCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Status = true
                        });
                });

            modelBuilder.Entity("Junko.Models.AdminManager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdminCategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeadLineAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(400)")
                        .HasMaxLength(400);

                    b.HasKey("Id");

                    b.HasIndex("AdminCategoryId");

                    b.ToTable("AdminManagers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdminCategoryId = 1,
                            CreatedAt = new DateTime(2019, 12, 25, 15, 42, 24, 420, DateTimeKind.Local).AddTicks(979),
                            Email = "Huseynia@code.edu.az",
                            Firstname = "Huseyn",
                            Lastname = "Asadov",
                            Password = "AGFkhc5OoWZDrhVUgtfONApKOIJtIZyZZTc93zg1bpihQMs6UrndQXnCgZ6K5Qg8hA==",
                            Phone = "+994507870181",
                            Photo = "download.jpeg",
                            Status = true
                        });
                });

            modelBuilder.Entity("Junko.Models.Blog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AdminManagerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(400)")
                        .HasMaxLength(400);

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AdminManagerId");

                    b.ToTable("Blogs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdminManagerId = 1,
                            CreatedAt = new DateTime(2019, 12, 25, 15, 42, 24, 421, DateTimeKind.Local).AddTicks(5265),
                            ModifiedAt = new DateTime(2019, 12, 25, 15, 42, 24, 421, DateTimeKind.Local).AddTicks(5254),
                            Photo = "blog/blog1.jpg",
                            Status = true
                        },
                        new
                        {
                            Id = 2,
                            AdminManagerId = 1,
                            CreatedAt = new DateTime(2019, 12, 25, 15, 42, 24, 421, DateTimeKind.Local).AddTicks(7431),
                            ModifiedAt = new DateTime(2019, 12, 25, 15, 42, 24, 421, DateTimeKind.Local).AddTicks(7420),
                            Photo = "blog/blog2.jpg",
                            Status = true
                        },
                        new
                        {
                            Id = 3,
                            AdminManagerId = 1,
                            CreatedAt = new DateTime(2019, 12, 25, 15, 42, 24, 421, DateTimeKind.Local).AddTicks(7465),
                            ModifiedAt = new DateTime(2019, 12, 25, 15, 42, 24, 421, DateTimeKind.Local).AddTicks(7463),
                            Photo = "blog/blog3.jpg",
                            Status = true
                        },
                        new
                        {
                            Id = 4,
                            AdminManagerId = 1,
                            CreatedAt = new DateTime(2019, 12, 25, 15, 42, 24, 421, DateTimeKind.Local).AddTicks(7470),
                            ModifiedAt = new DateTime(2019, 12, 25, 15, 42, 24, 421, DateTimeKind.Local).AddTicks(7468),
                            Photo = "blog/blog4.jpg",
                            Status = true
                        },
                        new
                        {
                            Id = 5,
                            AdminManagerId = 1,
                            CreatedAt = new DateTime(2019, 12, 25, 15, 42, 24, 421, DateTimeKind.Local).AddTicks(7474),
                            ModifiedAt = new DateTime(2019, 12, 25, 15, 42, 24, 421, DateTimeKind.Local).AddTicks(7472),
                            Photo = "blog/blog5.jpg",
                            Status = true
                        },
                        new
                        {
                            Id = 6,
                            AdminManagerId = 1,
                            CreatedAt = new DateTime(2019, 12, 25, 15, 42, 24, 421, DateTimeKind.Local).AddTicks(7478),
                            ModifiedAt = new DateTime(2019, 12, 25, 15, 42, 24, 421, DateTimeKind.Local).AddTicks(7476),
                            Photo = "blog/blog1.jpg",
                            Status = true
                        },
                        new
                        {
                            Id = 7,
                            AdminManagerId = 1,
                            CreatedAt = new DateTime(2019, 12, 25, 15, 42, 24, 421, DateTimeKind.Local).AddTicks(7482),
                            ModifiedAt = new DateTime(2019, 12, 25, 15, 42, 24, 421, DateTimeKind.Local).AddTicks(7480),
                            Photo = "blog/blog2.jpg",
                            Status = true
                        },
                        new
                        {
                            Id = 8,
                            AdminManagerId = 1,
                            CreatedAt = new DateTime(2019, 12, 25, 15, 42, 24, 421, DateTimeKind.Local).AddTicks(7486),
                            ModifiedAt = new DateTime(2019, 12, 25, 15, 42, 24, 421, DateTimeKind.Local).AddTicks(7484),
                            Photo = "blog/blog3.jpg",
                            Status = true
                        },
                        new
                        {
                            Id = 9,
                            AdminManagerId = 1,
                            CreatedAt = new DateTime(2019, 12, 25, 15, 42, 24, 421, DateTimeKind.Local).AddTicks(7490),
                            ModifiedAt = new DateTime(2019, 12, 25, 15, 42, 24, 421, DateTimeKind.Local).AddTicks(7488),
                            Photo = "blog/blog4.jpg",
                            Status = true
                        },
                        new
                        {
                            Id = 10,
                            AdminManagerId = 1,
                            CreatedAt = new DateTime(2019, 12, 25, 15, 42, 24, 421, DateTimeKind.Local).AddTicks(7494),
                            ModifiedAt = new DateTime(2019, 12, 25, 15, 42, 24, 421, DateTimeKind.Local).AddTicks(7492),
                            Photo = "blog/blog5.jpg",
                            Status = true
                        },
                        new
                        {
                            Id = 11,
                            AdminManagerId = 1,
                            CreatedAt = new DateTime(2019, 12, 25, 15, 42, 24, 421, DateTimeKind.Local).AddTicks(7497),
                            ModifiedAt = new DateTime(2019, 12, 25, 15, 42, 24, 421, DateTimeKind.Local).AddTicks(7496),
                            Photo = "blog/blog1.jpg",
                            Status = true
                        },
                        new
                        {
                            Id = 12,
                            AdminManagerId = 1,
                            CreatedAt = new DateTime(2019, 12, 25, 15, 42, 24, 421, DateTimeKind.Local).AddTicks(7501),
                            ModifiedAt = new DateTime(2019, 12, 25, 15, 42, 24, 421, DateTimeKind.Local).AddTicks(7499),
                            Photo = "blog/blog2.jpg",
                            Status = true
                        },
                        new
                        {
                            Id = 13,
                            AdminManagerId = 1,
                            CreatedAt = new DateTime(2019, 12, 25, 15, 42, 24, 421, DateTimeKind.Local).AddTicks(7505),
                            ModifiedAt = new DateTime(2019, 12, 25, 15, 42, 24, 421, DateTimeKind.Local).AddTicks(7503),
                            Photo = "blog/blog3.jpg",
                            Status = true
                        },
                        new
                        {
                            Id = 14,
                            AdminManagerId = 1,
                            CreatedAt = new DateTime(2019, 12, 25, 15, 42, 24, 421, DateTimeKind.Local).AddTicks(7509),
                            ModifiedAt = new DateTime(2019, 12, 25, 15, 42, 24, 421, DateTimeKind.Local).AddTicks(7507),
                            Photo = "blog/blog4.jpg",
                            Status = true
                        },
                        new
                        {
                            Id = 15,
                            AdminManagerId = 1,
                            CreatedAt = new DateTime(2019, 12, 25, 15, 42, 24, 421, DateTimeKind.Local).AddTicks(7513),
                            ModifiedAt = new DateTime(2019, 12, 25, 15, 42, 24, 421, DateTimeKind.Local).AddTicks(7511),
                            Photo = "blog/blog5.jpg",
                            Status = true
                        });
                });

            modelBuilder.Entity("Junko.Models.BlogCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AdminManagerId")
                        .HasColumnType("int");

                    b.Property<int>("BlogId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AdminManagerId");

                    b.HasIndex("BlogId");

                    b.HasIndex("CategoryId");

                    b.ToTable("BlogCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdminManagerId = 1,
                            BlogId = 1,
                            CategoryId = 1,
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            AdminManagerId = 1,
                            BlogId = 1,
                            CategoryId = 2,
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            AdminManagerId = 1,
                            BlogId = 1,
                            CategoryId = 3,
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            AdminManagerId = 1,
                            BlogId = 2,
                            CategoryId = 4,
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            AdminManagerId = 1,
                            BlogId = 2,
                            CategoryId = 5,
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            AdminManagerId = 1,
                            BlogId = 2,
                            CategoryId = 6,
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            AdminManagerId = 1,
                            BlogId = 3,
                            CategoryId = 1,
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            AdminManagerId = 1,
                            BlogId = 3,
                            CategoryId = 3,
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            AdminManagerId = 1,
                            BlogId = 3,
                            CategoryId = 5,
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            AdminManagerId = 1,
                            BlogId = 4,
                            CategoryId = 1,
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            AdminManagerId = 1,
                            BlogId = 5,
                            CategoryId = 2,
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12,
                            AdminManagerId = 1,
                            BlogId = 6,
                            CategoryId = 3,
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 13,
                            AdminManagerId = 1,
                            BlogId = 7,
                            CategoryId = 4,
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 14,
                            AdminManagerId = 1,
                            BlogId = 8,
                            CategoryId = 5,
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 15,
                            AdminManagerId = 1,
                            BlogId = 9,
                            CategoryId = 6,
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 16,
                            AdminManagerId = 1,
                            BlogId = 10,
                            CategoryId = 1,
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 17,
                            AdminManagerId = 1,
                            BlogId = 11,
                            CategoryId = 2,
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 18,
                            AdminManagerId = 1,
                            BlogId = 12,
                            CategoryId = 3,
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 19,
                            AdminManagerId = 1,
                            BlogId = 13,
                            CategoryId = 4,
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 20,
                            AdminManagerId = 1,
                            BlogId = 14,
                            CategoryId = 5,
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 21,
                            AdminManagerId = 1,
                            BlogId = 15,
                            CategoryId = 6,
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Junko.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AdminManagerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AdminManagerId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdminManagerId = 1,
                            CreatedAt = new DateTime(2019, 12, 25, 15, 42, 24, 420, DateTimeKind.Local).AddTicks(8715),
                            ModifiedAt = new DateTime(2019, 12, 25, 15, 42, 24, 420, DateTimeKind.Local).AddTicks(7914),
                            Status = true
                        },
                        new
                        {
                            Id = 2,
                            AdminManagerId = 1,
                            CreatedAt = new DateTime(2019, 12, 25, 15, 42, 24, 421, DateTimeKind.Local).AddTicks(221),
                            ModifiedAt = new DateTime(2019, 12, 25, 15, 42, 24, 421, DateTimeKind.Local).AddTicks(196),
                            Status = true
                        },
                        new
                        {
                            Id = 3,
                            AdminManagerId = 1,
                            CreatedAt = new DateTime(2019, 12, 25, 15, 42, 24, 421, DateTimeKind.Local).AddTicks(244),
                            ModifiedAt = new DateTime(2019, 12, 25, 15, 42, 24, 421, DateTimeKind.Local).AddTicks(242),
                            Status = true
                        },
                        new
                        {
                            Id = 4,
                            AdminManagerId = 1,
                            CreatedAt = new DateTime(2019, 12, 25, 15, 42, 24, 421, DateTimeKind.Local).AddTicks(248),
                            ModifiedAt = new DateTime(2019, 12, 25, 15, 42, 24, 421, DateTimeKind.Local).AddTicks(246),
                            Status = true
                        },
                        new
                        {
                            Id = 5,
                            AdminManagerId = 1,
                            CreatedAt = new DateTime(2019, 12, 25, 15, 42, 24, 421, DateTimeKind.Local).AddTicks(253),
                            ModifiedAt = new DateTime(2019, 12, 25, 15, 42, 24, 421, DateTimeKind.Local).AddTicks(250),
                            Status = true
                        },
                        new
                        {
                            Id = 6,
                            AdminManagerId = 1,
                            CreatedAt = new DateTime(2019, 12, 25, 15, 42, 24, 421, DateTimeKind.Local).AddTicks(257),
                            ModifiedAt = new DateTime(2019, 12, 25, 15, 42, 24, 421, DateTimeKind.Local).AddTicks(255),
                            Status = true
                        });
                });

            modelBuilder.Entity("Junko.Models.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LanguageCode = "en-US",
                            Name = "English"
                        },
                        new
                        {
                            Id = 2,
                            LanguageCode = "az-Latn-AZ",
                            Name = "Azerbaijan"
                        });
                });

            modelBuilder.Entity("Junko.Models.OurService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AdminManagerId")
                        .HasColumnType("int");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AdminManagerId");

                    b.ToTable("OurServices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdminManagerId = 1,
                            Icon = "fa fa-sliders",
                            ModifiedAt = new DateTime(2019, 12, 25, 15, 42, 24, 423, DateTimeKind.Local).AddTicks(5224),
                            Order = 1,
                            Status = true
                        },
                        new
                        {
                            Id = 2,
                            AdminManagerId = 1,
                            Icon = "fa fa-umbrella",
                            ModifiedAt = new DateTime(2019, 12, 25, 15, 42, 24, 423, DateTimeKind.Local).AddTicks(7293),
                            Order = 2,
                            Status = true
                        },
                        new
                        {
                            Id = 3,
                            AdminManagerId = 1,
                            Icon = "fa fa-camera",
                            ModifiedAt = new DateTime(2019, 12, 25, 15, 42, 24, 423, DateTimeKind.Local).AddTicks(7336),
                            Order = 3,
                            Status = true
                        },
                        new
                        {
                            Id = 4,
                            AdminManagerId = 1,
                            Icon = "fa fa-cog",
                            ModifiedAt = new DateTime(2019, 12, 25, 15, 42, 24, 423, DateTimeKind.Local).AddTicks(7339),
                            Order = 4,
                            Status = true
                        },
                        new
                        {
                            Id = 5,
                            AdminManagerId = 1,
                            Icon = "fa fa-file-code-o",
                            ModifiedAt = new DateTime(2019, 12, 25, 15, 42, 24, 423, DateTimeKind.Local).AddTicks(7342),
                            Order = 5,
                            Status = true
                        },
                        new
                        {
                            Id = 6,
                            AdminManagerId = 1,
                            Icon = "fa fa-bar-chart",
                            ModifiedAt = new DateTime(2019, 12, 25, 15, 42, 24, 423, DateTimeKind.Local).AddTicks(7345),
                            Order = 6,
                            Status = true
                        },
                        new
                        {
                            Id = 7,
                            AdminManagerId = 1,
                            Icon = "fa fa-headphones",
                            ModifiedAt = new DateTime(2019, 12, 25, 15, 42, 24, 423, DateTimeKind.Local).AddTicks(7348),
                            Order = 7,
                            Status = true
                        },
                        new
                        {
                            Id = 8,
                            AdminManagerId = 1,
                            Icon = "fa fa-leaf",
                            ModifiedAt = new DateTime(2019, 12, 25, 15, 42, 24, 423, DateTimeKind.Local).AddTicks(7351),
                            Order = 8,
                            Status = true
                        });
                });

            modelBuilder.Entity("Junko.Models.ServicesCover", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AdminManagerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AdminManagerId");

                    b.ToTable("ServicesCovers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdminManagerId = 1,
                            ModifiedAt = new DateTime(2019, 12, 25, 15, 42, 24, 422, DateTimeKind.Local).AddTicks(7272),
                            Order = 1,
                            Photo = "service/services1.jpg",
                            Status = true
                        },
                        new
                        {
                            Id = 2,
                            AdminManagerId = 1,
                            ModifiedAt = new DateTime(2019, 12, 25, 15, 42, 24, 422, DateTimeKind.Local).AddTicks(9469),
                            Order = 2,
                            Photo = "service/services2.jpg",
                            Status = true
                        },
                        new
                        {
                            Id = 3,
                            AdminManagerId = 1,
                            ModifiedAt = new DateTime(2019, 12, 25, 15, 42, 24, 422, DateTimeKind.Local).AddTicks(9510),
                            Order = 3,
                            Photo = "service/services3.jpg",
                            Status = true
                        });
                });

            modelBuilder.Entity("Junko.Models.Setting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AdminManagerId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("PhotoLogo")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("AdminManagerId");

                    b.ToTable("Setting");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "Junko@mail.com",
                            Location = "Code Academy",
                            Logo = "Junko",
                            ModifiedAt = new DateTime(2019, 12, 25, 15, 42, 24, 417, DateTimeKind.Local).AddTicks(2463),
                            Phone = "+994 50 787 01 81",
                            PhotoLogo = "logo/logo.png"
                        });
                });

            modelBuilder.Entity("Junko.Models.SettingTranslate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<int?>("AdminManagerId")
                        .HasColumnType("int");

                    b.Property<string>("FAQContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FAQTitle")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("SettingId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AdminManagerId");

                    b.HasIndex("LanguageId");

                    b.HasIndex("SettingId");

                    b.ToTable("SettingTranslates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = " Nizami street 203B, AF Business House",
                            FAQContent = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec id erat sagittis, faucibus metus malesuada, eleifend turpis. Mauris semper augue id nisl aliquet, a porta lectus mattis. Nulla at tortor augue. In eget enim diam. Donec gravida tortor sem, ac fermentum nibh rutrum sit amet. Nulla convallis mauris vitae congue consequat. Donec interdum nunc purus, vitae vulputate arcu fringilla quis. Vivamus iaculis euismod dui.",
                            FAQTitle = "Below are frequently asked questions, you may find the answer for yourself",
                            LanguageId = 1,
                            ModifiedAt = new DateTime(2019, 12, 25, 15, 42, 24, 418, DateTimeKind.Local).AddTicks(8962),
                            SettingId = 1
                        },
                        new
                        {
                            Id = 2,
                            Address = " Nizami küç. 203B, AF Business House, 2-ci mərtəbə",
                            FAQContent = "",
                            FAQTitle = "Aşağıda tez-tez verilən suallarla özünüz üçün cavab tapa bilərsiniz",
                            LanguageId = 2,
                            ModifiedAt = new DateTime(2019, 12, 25, 15, 42, 24, 418, DateTimeKind.Local).AddTicks(9067),
                            SettingId = 1
                        });
                });

            modelBuilder.Entity("Junko.Models.SocialActivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AdminManagerId")
                        .HasColumnType("int");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("SettingId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AdminManagerId");

                    b.HasIndex("SettingId");

                    b.ToTable("SocialActivities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Link = "https://www.facebook.com/",
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "facebook",
                            SettingId = 1
                        },
                        new
                        {
                            Id = 2,
                            Link = "https://twitter.com/?lang=en",
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "twitter",
                            SettingId = 1
                        },
                        new
                        {
                            Id = 3,
                            Link = "https://www.instagram.com/",
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "instagram",
                            SettingId = 1
                        },
                        new
                        {
                            Id = 4,
                            Link = "https://www.linkedin.com/feed/",
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "linkedin",
                            SettingId = 1
                        },
                        new
                        {
                            Id = 5,
                            Link = "https://www.google.com",
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "google",
                            SettingId = 1
                        });
                });

            modelBuilder.Entity("Junko.Models.WhatDo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AdminManagerId")
                        .HasColumnType("int");

                    b.Property<int?>("LanguageId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int?>("WhatDoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AdminManagerId");

                    b.HasIndex("LanguageId");

                    b.HasIndex("WhatDoId");

                    b.ToTable("WhatDos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdminManagerId = 1,
                            ModifiedAt = new DateTime(2019, 12, 25, 15, 42, 24, 424, DateTimeKind.Local).AddTicks(8503),
                            Photo = "about/about2.jpg",
                            Status = true
                        },
                        new
                        {
                            Id = 2,
                            AdminManagerId = 1,
                            ModifiedAt = new DateTime(2019, 12, 25, 15, 42, 24, 424, DateTimeKind.Local).AddTicks(9771),
                            Photo = "about/about3.jpg",
                            Status = true
                        });
                });

            modelBuilder.Entity("Junko.ModelTranslate.AboutSettingTranslate", b =>
                {
                    b.HasOne("Junko.Models.AboutSetting", "AboutSetting")
                        .WithMany("AboutSettingTranslates")
                        .HasForeignKey("AboutSettingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Junko.Models.Language", "Language")
                        .WithMany("AboutSettingTranslates")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Junko.ModelTranslate.AdminCategoryTranslate", b =>
                {
                    b.HasOne("Junko.Models.AdminCategory", "AdminCategory")
                        .WithMany("AdminCategoryTranslates")
                        .HasForeignKey("AdminCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Junko.Models.Language", "Language")
                        .WithMany("AdminCategoryTranslates")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Junko.ModelTranslate.BlogCategoryTranslate", b =>
                {
                    b.HasOne("Junko.Models.Category", "Category")
                        .WithMany("BlogCategoryTranslates")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Junko.Models.Language", "Language")
                        .WithMany("BlogCategoryTranslates")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Junko.ModelTranslate.BlogTranslate", b =>
                {
                    b.HasOne("Junko.Models.Blog", "Blog")
                        .WithMany("BlogTranslates")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Junko.Models.Language", "Language")
                        .WithMany("BlogTranslates")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Junko.ModelTranslate.OurServiceTranslate", b =>
                {
                    b.HasOne("Junko.Models.Language", "Language")
                        .WithMany("OurServiceTranslates")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Junko.Models.OurService", "OurService")
                        .WithMany("OurServiceTranslates")
                        .HasForeignKey("OurServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Junko.ModelTranslate.ServicesCoverTranslate", b =>
                {
                    b.HasOne("Junko.Models.Language", "Language")
                        .WithMany("ServicesCoverTranslates")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Junko.Models.ServicesCover", "ServicesCover")
                        .WithMany("ServicesCoverTranslates")
                        .HasForeignKey("ServicesCoverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Junko.ModelTranslate.WhatDoTranslate", b =>
                {
                    b.HasOne("Junko.Models.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Junko.Models.WhatDo", "WhatDo")
                        .WithMany()
                        .HasForeignKey("WhatDoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Junko.Models.AboutSetting", b =>
                {
                    b.HasOne("Junko.Models.AdminManager", "AdminManager")
                        .WithMany("AboutSettings")
                        .HasForeignKey("AdminManagerId");
                });

            modelBuilder.Entity("Junko.Models.AdminManager", b =>
                {
                    b.HasOne("Junko.Models.AdminCategory", "Category")
                        .WithMany("AdminManagers")
                        .HasForeignKey("AdminCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Junko.Models.Blog", b =>
                {
                    b.HasOne("Junko.Models.AdminManager", "AdminManager")
                        .WithMany("Blogs")
                        .HasForeignKey("AdminManagerId");
                });

            modelBuilder.Entity("Junko.Models.BlogCategory", b =>
                {
                    b.HasOne("Junko.Models.AdminManager", "AdminManager")
                        .WithMany()
                        .HasForeignKey("AdminManagerId");

                    b.HasOne("Junko.Models.Blog", "Blog")
                        .WithMany("BlogCategories")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Junko.Models.Category", "Category")
                        .WithMany("BlogCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Junko.Models.Category", b =>
                {
                    b.HasOne("Junko.Models.AdminManager", "AdminManager")
                        .WithMany("Categories")
                        .HasForeignKey("AdminManagerId");
                });

            modelBuilder.Entity("Junko.Models.OurService", b =>
                {
                    b.HasOne("Junko.Models.AdminManager", "AdminManager")
                        .WithMany("OurServices")
                        .HasForeignKey("AdminManagerId");
                });

            modelBuilder.Entity("Junko.Models.ServicesCover", b =>
                {
                    b.HasOne("Junko.Models.AdminManager", "AdminManager")
                        .WithMany("ServicesCovers")
                        .HasForeignKey("AdminManagerId");
                });

            modelBuilder.Entity("Junko.Models.Setting", b =>
                {
                    b.HasOne("Junko.Models.AdminManager", "AdminManager")
                        .WithMany()
                        .HasForeignKey("AdminManagerId");
                });

            modelBuilder.Entity("Junko.Models.SettingTranslate", b =>
                {
                    b.HasOne("Junko.Models.AdminManager", "AdminManager")
                        .WithMany()
                        .HasForeignKey("AdminManagerId");

                    b.HasOne("Junko.Models.Language", "Language")
                        .WithMany("SettingTranslates")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Junko.Models.Setting", "Setting")
                        .WithMany("SettingTranslates")
                        .HasForeignKey("SettingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Junko.Models.SocialActivity", b =>
                {
                    b.HasOne("Junko.Models.AdminManager", "AdminManager")
                        .WithMany()
                        .HasForeignKey("AdminManagerId");

                    b.HasOne("Junko.Models.Setting", "Setting")
                        .WithMany("SocialActivities")
                        .HasForeignKey("SettingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Junko.Models.WhatDo", b =>
                {
                    b.HasOne("Junko.Models.AdminManager", "AdminManager")
                        .WithMany("WhatDos")
                        .HasForeignKey("AdminManagerId");

                    b.HasOne("Junko.Models.Language", null)
                        .WithMany("WhatDos")
                        .HasForeignKey("LanguageId");

                    b.HasOne("Junko.Models.WhatDo", null)
                        .WithMany("WhatDos")
                        .HasForeignKey("WhatDoId");
                });
#pragma warning restore 612, 618
        }
    }
}
